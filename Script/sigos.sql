-- MySQL Script generated by MySQL Workbench
-- lun 31 ago 2015 14:16:26 CST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sigos
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sigos
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sigos` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `sigos` ;

-- -----------------------------------------------------
-- Table `sigos`.`telefono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`telefono` (
  `idtelefono` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `numeroTelefono` VARCHAR(45) NOT NULL COMMENT '',
  `detalle` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idtelefono`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Paciente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Paciente` (
  `idPaciente` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nombrePaciente` VARCHAR(45) NOT NULL COMMENT '',
  `apellido1Paciente` VARCHAR(45) NOT NULL COMMENT '',
  `apellido2Paciente` VARCHAR(45) NOT NULL COMMENT '',
  `sexo` TINYINT NOT NULL COMMENT '',
  `fechaNacimientoPaciente` DATE NOT NULL COMMENT '',
  `nacionalidadPaciente` VARCHAR(45) NOT NULL COMMENT '',
  `cedulaPaciente` VARCHAR(45) NOT NULL COMMENT '',
  `idtelefono` INT NULL COMMENT '',
  `direccion1` VARCHAR(45) NOT NULL COMMENT '',
  `direccion2` VARCHAR(45) NULL COMMENT '',
  `email` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idPaciente`)  COMMENT '',
  INDEX `fk_telefono_idx` (`idtelefono` ASC)  COMMENT '',
  CONSTRAINT `fk_telefono`
    FOREIGN KEY (`idtelefono`)
    REFERENCES `sigos`.`telefono` (`idtelefono`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`ExamenMedico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`ExamenMedico` (
  `idExamenMedico` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `archivoExamen` BLOB NULL COMMENT '',
  PRIMARY KEY (`idExamenMedico`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Padecimientos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Padecimientos` (
  `idPadecimientos` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nombrePadecimiento` VARCHAR(45) NOT NULL COMMENT '',
  `descripcion` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idPadecimientos`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Alergias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Alergias` (
  `idAlergias` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nombreAlergia` VARCHAR(45) NOT NULL COMMENT '',
  `descripcionAlergia` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idAlergias`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Vacunas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Vacunas` (
  `idVacunas` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `tipo` VARCHAR(45) NOT NULL COMMENT '',
  `fechaAplicacion` DATE NOT NULL COMMENT '',
  PRIMARY KEY (`idVacunas`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`AntecedentesPersonales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`AntecedentesPersonales` (
  `idAntecedentesPersonales` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `idAlergias` INT NULL COMMENT '',
  `tratamiento` VARCHAR(45) NOT NULL COMMENT '',
  `idPadecimientos` INT NULL COMMENT '',
  `idVacunas` INT NULL COMMENT '',
  `medicamento` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idAntecedentesPersonales`)  COMMENT '',
  INDEX `fk_padecimientos_idx` (`idPadecimientos` ASC)  COMMENT '',
  INDEX `fk_alergias_idx` (`idAlergias` ASC)  COMMENT '',
  INDEX `fk_vacunas_idx` (`idVacunas` ASC)  COMMENT '',
  CONSTRAINT `fk_padecimientos`
    FOREIGN KEY (`idPadecimientos`)
    REFERENCES `sigos`.`Padecimientos` (`idPadecimientos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_alergias`
    FOREIGN KEY (`idAlergias`)
    REFERENCES `sigos`.`Alergias` (`idAlergias`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vacunas`
    FOREIGN KEY (`idVacunas`)
    REFERENCES `sigos`.`Vacunas` (`idVacunas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`AntecedentesFamiliares`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`AntecedentesFamiliares` (
  `idAntecedentesFamiliares` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `idPadecimientos` INT NOT NULL COMMENT '',
  `parentesco` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idAntecedentesFamiliares`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`ExpedienteMedico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`ExpedienteMedico` (
  `idExpedienteMedico` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `idPaciente` INT NOT NULL COMMENT '',
  `idExamenMedico` INT NULL COMMENT '',
  `idAntecedentesPersonales` INT NOT NULL COMMENT '',
  `idAntecedentesFamiliares` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idExpedienteMedico`)  COMMENT '',
  INDEX `fk_paciente_idx` (`idPaciente` ASC)  COMMENT '',
  INDEX `fk_examenMedico_idx` (`idExamenMedico` ASC)  COMMENT '',
  INDEX `fk_antecedentesPersonales_idx` (`idAntecedentesPersonales` ASC)  COMMENT '',
  INDEX `fk_antecedentesFamiliares_idx` (`idAntecedentesFamiliares` ASC)  COMMENT '',
  CONSTRAINT `fk_paciente`
    FOREIGN KEY (`idPaciente`)
    REFERENCES `sigos`.`Paciente` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_examenMedico`
    FOREIGN KEY (`idExamenMedico`)
    REFERENCES `sigos`.`ExamenMedico` (`idExamenMedico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_antecedentesPersonales`
    FOREIGN KEY (`idAntecedentesPersonales`)
    REFERENCES `sigos`.`AntecedentesPersonales` (`idAntecedentesPersonales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_antecedentesFamiliares`
    FOREIGN KEY (`idAntecedentesFamiliares`)
    REFERENCES `sigos`.`AntecedentesFamiliares` (`idAntecedentesFamiliares`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`ExamenFisico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`ExamenFisico` (
  `idExamenFisico` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `categoria` VARCHAR(45) NULL COMMENT '',
  `subCategoria` VARCHAR(45) NULL COMMENT '',
  `estado` VARCHAR(45) NULL COMMENT '',
  `detalle` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idExamenFisico`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`cita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`cita` (
  `idcita` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `estado` TINYINT NOT NULL COMMENT '',
  `fechaCreacion` DATE NULL COMMENT '',
  `fechaConsulta` DATE NULL COMMENT '',
  `anotaciones` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idcita`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Receta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Receta` (
  `idReceta` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nombreMedicamento` VARCHAR(45) NOT NULL COMMENT '',
  `cantidad` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idReceta`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`SignosVitales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`SignosVitales` (
  `idSignosVitales` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `peso` DOUBLE NOT NULL COMMENT '',
  `FC` DOUBLE NOT NULL COMMENT '',
  `PAR` DOUBLE NOT NULL COMMENT '',
  `IMC` DOUBLE NOT NULL COMMENT '',
  `IMB` DOUBLE NOT NULL COMMENT '',
  `H2O` DOUBLE NOT NULL COMMENT '',
  `MM` DOUBLE NOT NULL COMMENT '',
  `GC` DOUBLE NOT NULL COMMENT '',
  `AS` TINYINT(1) NOT NULL COMMENT '',
  `AF` TINYINT(1) NOT NULL COMMENT '',
  `SS` TINYINT(1) NOT NULL COMMENT '',
  `PAP` TINYINT(1) NOT NULL COMMENT '',
  `IM` TINYINT(1) NOT NULL COMMENT '',
  `IV` TINYINT(1) NOT NULL COMMENT '',
  `SC` TINYINT(1) NOT NULL COMMENT '',
  `GM` TINYINT(1) NOT NULL COMMENT '',
  `CP` TINYINT(1) NOT NULL COMMENT '',
  `ES` TINYINT(1) NOT NULL COMMENT '',
  `PA` TINYINT(1) NOT NULL COMMENT '',
  `glicemia` VARCHAR(45) NULL COMMENT '',
  `talla` DOUBLE NULL COMMENT '',
  PRIMARY KEY (`idSignosVitales`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`ConsultaMedica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`ConsultaMedica` (
  `idConsultaMedica` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `idExpedienteMedico` INT NOT NULL COMMENT '',
  `idExamenFisico` INT NULL COMMENT '',
  `motivoConsulta` VARCHAR(45) NOT NULL COMMENT '',
  `descripcionSintomas` VARCHAR(45) NOT NULL COMMENT '',
  `diagnostico` VARCHAR(45) NULL COMMENT '',
  `signosVitales` INT NOT NULL COMMENT '',
  `idCita` INT NULL COMMENT '',
  `idReceta` INT NULL COMMENT '',
  PRIMARY KEY (`idConsultaMedica`)  COMMENT '',
  INDEX `fk_expedienteMedico_idx` (`idExpedienteMedico` ASC)  COMMENT '',
  INDEX `fk_examenFisico_idx` (`idExamenFisico` ASC)  COMMENT '',
  INDEX `fk_citaMedica_idx` (`idCita` ASC)  COMMENT '',
  INDEX `fk_receta_idx` (`idReceta` ASC)  COMMENT '',
  INDEX `fk_signosVitales_idx` (`signosVitales` ASC)  COMMENT '',
  CONSTRAINT `fk_expedienteMedico`
    FOREIGN KEY (`idExpedienteMedico`)
    REFERENCES `sigos`.`ExpedienteMedico` (`idExpedienteMedico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_examenFisico`
    FOREIGN KEY (`idExamenFisico`)
    REFERENCES `sigos`.`ExamenFisico` (`idExamenFisico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_citaMedica`
    FOREIGN KEY (`idCita`)
    REFERENCES `sigos`.`cita` (`idcita`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_receta`
    FOREIGN KEY (`idReceta`)
    REFERENCES `sigos`.`Receta` (`idReceta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_signosVitales`
    FOREIGN KEY (`signosVitales`)
    REFERENCES `sigos`.`SignosVitales` (`idSignosVitales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Inventario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Inventario` (
  `idInventario` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nombre` VARCHAR(45) NOT NULL COMMENT '',
  `tipo` VARCHAR(45) NOT NULL COMMENT '',
  `descripcion` VARCHAR(45) NOT NULL COMMENT '',
  `cantidad` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idInventario`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sigos`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sigos`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `nombreUsuario` VARCHAR(45) NOT NULL COMMENT '',
  `password` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`idUsuario`)  COMMENT '')
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
