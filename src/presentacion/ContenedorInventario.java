// @author cooper15
 
package presentacion;

import java.awt.event.MouseEvent;
import negocio.NegocioInventario;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.SQLException;
import entidad.Inventario;
import javax.swing.JOptionPane;

/**
 * Esta clase permite al usuario gestionar todo lo correspondiente con el inventario
 * @author QUINCHO
 * @version 1.0, 06/12/2015
 */
public class ContenedorInventario extends javax.swing.JPanel 
{   
    java.awt.Frame parent;
    private int filaSeleccionada;
    
    

    /**
     * Crea nuevo formulario ContenedorInventario
     * @param parent ventana padre
     */
    
    public ContenedorInventario(java.awt.Frame parent) 
    {   
        this.parent = parent;
        initComponents();
        cargarInventario();
        
        // Deshabilitamos los botones innecesarios para actualizar, eliminar, descontar
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnDescontar.setEnabled(false);
        
        setEventoMouseClicked();
    }// fin del constructor de ContenedorInventario

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTablaInventario = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInventario = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnDescontar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        pnlTablaInventario.setBorder(javax.swing.BorderFactory.createTitledBorder("Existencias"));
        pnlTablaInventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTablaInventarioMouseClicked(evt);
            }
        });

        tblInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Cantidad", "Tama√±o", "Tipo"
            }
        ));
        jScrollPane2.setViewportView(tblInventario);

        javax.swing.GroupLayout pnlTablaInventarioLayout = new javax.swing.GroupLayout(pnlTablaInventario);
        pnlTablaInventario.setLayout(pnlTablaInventarioLayout);
        pnlTablaInventarioLayout.setHorizontalGroup(
            pnlTablaInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTablaInventarioLayout.setVerticalGroup(
            pnlTablaInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones"));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnDescontar.setText("Descontar");
        btnDescontar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescontarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(btnDescontar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregar)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnDescontar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar)
                        .addComponent(btnActualizar)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlTablaInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTablaInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        AgregarInventario nuevoAgregar = new AgregarInventario(this.parent,true);
        nuevoAgregar.setVisible(true);
        cargarInventario();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void pnlTablaInventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTablaInventarioMouseClicked
       
        btnAgregar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnDescontar.setEnabled(false);
    }//GEN-LAST:event_pnlTablaInventarioMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        
        ActualizarInventario actualizarObjeto = new ActualizarInventario(parent, true,
                obtenerRegistroSeleccionado());
        //actualizarObjeto.cargarRegistro(obtenerRegistroSeleccionado());
        actualizarObjeto.setVisible(true);
        cargarInventario();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        int row = tblInventario.getSelectedRow();
        String nombre = tblInventario.getValueAt(row, 0).toString();
        int respuesta;
        
        respuesta = JOptionPane.showConfirmDialog(parent, "En realidad desea eliminar " + nombre + " del inventario ?", 
                "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (respuesta == JOptionPane.YES_OPTION)
        {
            eliminarDelInventario(nombre);
            
            JOptionPane.showMessageDialog(parent, nombre + " ha sido eliminado del inventaio", "Informaci√≥n",
                    JOptionPane.INFORMATION_MESSAGE);
            
            cargarInventario();
        }// fin del if
        
        else
            if (respuesta == JOptionPane.NO_OPTION)
            {
            }// fin del if
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnDescontarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescontarActionPerformed
        
        String cantidadStr, nombre;
        int cantidadDesc, cantidad, row;
        
        row = tblInventario.getSelectedRow();
        nombre = tblInventario.getValueAt(row, 0).toString();
        cantidad = Integer.parseInt(tblInventario.getValueAt(row, 1).toString());
        
        cantidadStr = JOptionPane.showInputDialog(parent, "Ingrese la cantidad a descontar:", "Informaci√≥n",
                JOptionPane.INFORMATION_MESSAGE);
        
        
        if (cantidadStr != null)
        {
            cantidadDesc = Integer.parseInt(cantidadStr);
            int respuesta;
            respuesta = JOptionPane.showConfirmDialog(parent, "En realidad desea descontar en " + cantidadStr + 
                    " la cantidad de " + nombre + " ?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            if (respuesta == JOptionPane.YES_OPTION)
            {
                descontarDelInventario(nombre, cantidadStr);
                
                JOptionPane.showMessageDialog(parent, "La cantidad de " + nombre + " ahora es de " + (cantidad - cantidadDesc),
                        "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                
                cargarInventario();
            }// fin del if
            
        }// fin del if
    }//GEN-LAST:event_btnDescontarActionPerformed
    
    /**
     * Carga los registros del inventario existentes en la base de datos en el formulario(JTable)
     */
    public void cargarInventario()
    {
        NegocioInventario objNegocioInventario = new NegocioInventario();
        ResultSet rs;
        
        DefaultTableModel modelo = new DefaultTableModel();
        String cabezera [] = {"Nombre", "Cantidad", "Tama√±o", "V√≠a de Administraci√≥n"};
        String fila [] = new String [cabezera.length];  // fila con 4 campos en este caso
        
        for (int i = 0; i < cabezera.length; i++)  // recorremos cabezera y vamos insertando cada elemento
            modelo.addColumn(cabezera [i]);            // de cabezera como una columna
         
        try
        {
            rs = objNegocioInventario.listarInventario();
            
            while(rs.next())
            {
                for (int i = 0; i < fila.length; i++)
                    fila [i] = rs.getString(i + 1);
                
                modelo.addRow(fila);  // insertamos la fila en el modelo de la tabla
            }// fin del whiele
            
            tblInventario.setModel(modelo);
            rs.close();
        }// fin del try
        catch(SQLException sqle)
        {
            System.out.println(sqle.getErrorCode() + sqle.getMessage());
        }// fin del catch
                
    }// fin del metodo cargarInventario
    
    // Este metodo llama al metodo que habilita los botones al clickear un elemento de la tabla
    private void setEventoMouseClicked()
    {
        tblInventario.addMouseListener(new java.awt.event.MouseAdapter()
            {
                @Override
                public void mouseClicked(MouseEvent e) 
                {
                    filaSeleccionada = clickEnRegistro(e);
                }
            }// fin de la clase interna anonima
        );
    }// fin del metodo setEventoMouseClicked
    
    private int clickEnRegistro(MouseEvent evt)
    {
        int row = 0;
        //row = tblInventario.rowAtPoint(evt.getPoint());
        
        row = tblInventario.getSelectedRow();
        if (row >= 0)
        {
            btnAgregar.setEnabled(false);
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnDescontar.setEnabled(true);
        }// fin del if
        
        return row;
    }// fin del metodo clickEnRegistro
    
    /**
     * Este m√©todo obtiene los valores de la fila seleccionada en la tabla retorna un objeto de tipo inventario
     * @return un objeto Inventario
     */
        public Inventario obtenerRegistroSeleccionado()
    {
        Inventario objeto = new Inventario();
        
        try
        {
            objeto.setNombre(tblInventario.getValueAt(filaSeleccionada, 0).toString());
            objeto.setCantidad(Integer.parseInt(tblInventario.getValueAt(filaSeleccionada, 1).toString()));
            objeto.setTamanio(tblInventario.getValueAt(filaSeleccionada, 2).toString());
            objeto.setViaAdministracion(tblInventario.getValueAt(filaSeleccionada, 3).toString());
        }// fin del try
        catch(NullPointerException npe)
        {
            objeto.setTamanio("");
            
            try
            {
                objeto.setViaAdministracion(tblInventario.getValueAt(filaSeleccionada, 3).toString());
            }// fin de try
            catch(NullPointerException npe2)
            {
                objeto.setViaAdministracion("");
            }// fin del catch
        }// fin del catch
        
        return objeto;
    }// fin del metodo obtenerRegistroSeleccionado
    
    /*private int obtenerRegistroFila()
    {
        int row;
        
        tblInventario.addMouseListener(new java.awt.event.MouseAdapter()
            {
                @Override
                public void mouseClicked(MouseEvent evt)
                {
                    
                }// fin del metodo mouseClicked
            }// fin de la clase interna anonima
        );// fin del metodo addMouseListener
    }// fin del metodo obtenerRegistroFila*/
    
    private void eliminarDelInventario(String nombre)
    {
        NegocioInventario objNegocioInventario = new NegocioInventario();
        objNegocioInventario.eliminarDelInventario(nombre);
    }// fin del metodo eliminarDelInventario
    
    /**
     * Este m√©todo permiteo al usuario descontar del inventario
     * @param nombre tipo String que representa el nombre del insumo
     * @param cantidad tipo String que representa la cantidad a descontar del insumo
     */
    public void descontarDelInventario(String nombre, String cantidad)
    {
        NegocioInventario objNegocioInventario = new NegocioInventario();
        objNegocioInventario.descontarDelInventario(nombre, cantidad);
    }// fin del metodo descontarDelInventario
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDescontar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlTablaInventario;
    private javax.swing.JTable tblInventario;
    // End of variables declaration//GEN-END:variables
}
