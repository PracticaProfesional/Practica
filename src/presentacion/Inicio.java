/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;


import entidad.enums.EstadoCitaEnum;
import entidad.ExamenFisico;
import entidad.SignosVitales;
import entidad.enums.EstadoConsultaMedicaEnum;
import entidad.enums.SexoEnum;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jb2011.lnf.beautyeye.ch3_button.BEButtonUI;
/**
 *
 * @author cooper15
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    java.io.File fichero;
    private String idPaciente;
    private String idExpediente;
    private String pacienteActual;
    private String idConsultaMedica;
    private int dayBirth;
    private int monthBirth;
    private int yearBirth;
    private int sexo;
    int contador = 0;
    String  [][] backUpList;
    private String idSVitales;
    private ContenedorReceta rc;
    
    
    public Inicio() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | Inicio.MAXIMIZED_HORIZ);
        btnGuardarLabGab.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
        btnRefrescarTablaBuscar.setUI(new BEButtonUI().setNormalColor(BEButtonUI.NormalColor.lightBlue));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popMenuAccionesActividad = new javax.swing.JPopupMenu();
        popItemNuevaActividad = new javax.swing.JMenuItem();
        popItemCompletarActividad = new javax.swing.JMenuItem();
        popItemEliminarActividad = new javax.swing.JMenuItem();
        panelPrincipal = new javax.swing.JTabbedPane();
        tabExpediente = new javax.swing.JTabbedPane();
        tabBuscarPaciente = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableBuscarPaciente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        textBuscarPaciente = new javax.swing.JTextField();
        btnBuscarPaciente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnRefrescarTablaBuscar = new javax.swing.JButton();
        panelBtnBuscarPaciente = new javax.swing.JPanel();
        btnConsultaMedica = new javax.swing.JButton();
        btnCrearExpediente = new javax.swing.JButton();
        tabConsultaMedica = new javax.swing.JPanel();
        panelConsultaMedica = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        textPeso = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        textTemperatura = new javax.swing.JTextField();
        textTalla = new javax.swing.JTextField();
        textFC = new javax.swing.JTextField();
        textPAR = new javax.swing.JTextField();
        textIMC = new javax.swing.JTextField();
        textIMB = new javax.swing.JTextField();
        textH2O = new javax.swing.JTextField();
        textMM = new javax.swing.JTextField();
        textGC = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        chAS = new javax.swing.JCheckBox();
        chAF = new javax.swing.JCheckBox();
        chSS = new javax.swing.JCheckBox();
        chIM = new javax.swing.JCheckBox();
        chCP = new javax.swing.JCheckBox();
        chExMamas = new javax.swing.JCheckBox();
        chPAP = new javax.swing.JCheckBox();
        chES = new javax.swing.JCheckBox();
        chPA = new javax.swing.JCheckBox();
        chIV = new javax.swing.JCheckBox();
        chGM = new javax.swing.JCheckBox();
        chSC = new javax.swing.JCheckBox();
        jLabel44 = new javax.swing.JLabel();
        chCuraciones = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        btnSignosVitalesGuardar = new javax.swing.JButton();
        btnSignosVitalesCancelar = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        textMotivoConsulta = new javax.swing.JTextField();
        textSintomas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textNotaEnfermeria = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlOjos = new javax.swing.JLabel();
        jlOidos = new javax.swing.JLabel();
        cbOjos = new javax.swing.JComboBox();
        cbOidos = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        cbNariz = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cbBoca = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        cbAdenopatias = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        cbTiroides = new javax.swing.JComboBox();
        cbDetallesOidos = new javax.swing.JComboBox();
        cbDetallesNariz = new javax.swing.JComboBox();
        cbDetallesBoca = new javax.swing.JComboBox();
        textOtrosDetallesOidos = new javax.swing.JTextField();
        textOtrosDetallesNariz = new javax.swing.JTextField();
        textOtrosDetallesBoca = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cbTorax = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cbCorazon = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        cbAbdomen = new javax.swing.JComboBox();
        cbDetallesAbdomen = new javax.swing.JComboBox();
        cbDetallesTorax = new javax.swing.JComboBox();
        cbDetallesCorazon = new javax.swing.JComboBox();
        textOtrosDetallesTorax = new javax.swing.JTextField();
        textOtrosDetallesCorazon = new javax.swing.JTextField();
        textOtrosDetallesAbdomen = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        cbEsqueletico = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        cbNervioso = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cbUrinario = new javax.swing.JComboBox();
        cbDetallesEsqueletico = new javax.swing.JComboBox();
        cbDetallesUrinario = new javax.swing.JComboBox();
        textOtrosDetallesEsqueletico = new javax.swing.JTextField();
        textOtrosDetallesUrinario = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btnGuardarExamenFisico = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        textObservaciones = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        textMotivo2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbDiagnosticoOpcional = new javax.swing.JComboBox();
        jPanel10 = new javax.swing.JPanel();
        lblPacienteActual = new javax.swing.JLabel();
        btnVerSignosVitales = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        btnLabGabineteAdjuntarExamen = new javax.swing.JButton();
        textRutaLabGab = new javax.swing.JTextField();
        btnGuardarLabGab = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelImagenLabGab = new javax.swing.JPanel();
        tapAgenda = new javax.swing.JTabbedPane();
        agendaPanelPrincipal = new javax.swing.JPanel();
        agendaPanelCalendario = new javax.swing.JPanel();
        agendaCalendario = new datechooser.beans.DateChooserPanel();
        agendaPanelActividades = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        agendaTabla = new javax.swing.JTable();
        tabReportes = new javax.swing.JTabbedPane();
        tabInventario = new javax.swing.JTabbedPane();
        tabAdministrador = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        popItemNuevaActividad.setText("Añadir actividad");
        popItemNuevaActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popItemNuevaActividadActionPerformed(evt);
            }
        });
        popMenuAccionesActividad.add(popItemNuevaActividad);

        popItemCompletarActividad.setText("Completa");
        popItemCompletarActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popItemCompletarActividadActionPerformed(evt);
            }
        });
        popMenuAccionesActividad.add(popItemCompletarActividad);

        popItemEliminarActividad.setText("Eliminar");
        popItemEliminarActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popItemEliminarActividadActionPerformed(evt);
            }
        });
        popMenuAccionesActividad.add(popItemEliminarActividad);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema Gestion Oficina de Salud");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelPrincipal.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        panelPrincipal.setToolTipText("");
        panelPrincipal.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        panelPrincipal.setName("Panel principal"); // NOI18N
        panelPrincipal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                panelPrincipalStateChanged(evt);
            }
        });
        panelPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelPrincipalMouseClicked(evt);
            }
        });

        tabExpediente.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N

        tableBuscarPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cédula", "Nombre", "P. Apellido", "S. Apellido"
            }
        ));
        jScrollPane3.setViewportView(tableBuscarPaciente);

        jLabel1.setText("Cédula Paciente");

        textBuscarPaciente.setToolTipText("Digite la cedula y presione buscar.Para ver todos los elementos borre el contenido y presione Enter");
        textBuscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBuscarPacienteActionPerformed(evt);
            }
        });

        btnBuscarPaciente.setText("Buscar");
        btnBuscarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPacienteActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/icons/magnifyingglass.png"))); // NOI18N

        btnRefrescarTablaBuscar.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnRefrescarTablaBuscar.setForeground(new java.awt.Color(235, 235, 235));
        btnRefrescarTablaBuscar.setText("Refrescar Tabla");
        btnRefrescarTablaBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarTablaBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1176, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(textBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefrescarTablaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(textBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPaciente)
                    .addComponent(jLabel3)
                    .addComponent(btnRefrescarTablaBuscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnConsultaMedica.setText("Consulta Medica");
        btnConsultaMedica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaMedicaActionPerformed(evt);
            }
        });

        btnCrearExpediente.setText("Crear Expediente");
        btnCrearExpediente.setBorderPainted(false);
        btnCrearExpediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearExpedienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBtnBuscarPacienteLayout = new javax.swing.GroupLayout(panelBtnBuscarPaciente);
        panelBtnBuscarPaciente.setLayout(panelBtnBuscarPacienteLayout);
        panelBtnBuscarPacienteLayout.setHorizontalGroup(
            panelBtnBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBtnBuscarPacienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConsultaMedica, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(btnCrearExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelBtnBuscarPacienteLayout.setVerticalGroup(
            panelBtnBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBtnBuscarPacienteLayout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(panelBtnBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultaMedica)
                    .addComponent(btnCrearExpediente))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout tabBuscarPacienteLayout = new javax.swing.GroupLayout(tabBuscarPaciente);
        tabBuscarPaciente.setLayout(tabBuscarPacienteLayout);
        tabBuscarPacienteLayout.setHorizontalGroup(
            tabBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabBuscarPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBtnBuscarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tabBuscarPacienteLayout.setVerticalGroup(
            tabBuscarPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabBuscarPacienteLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelBtnBuscarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabExpediente.addTab("Buscar Paciente", tabBuscarPaciente);

        tabConsultaMedica.setLayout(new java.awt.BorderLayout());

        panelConsultaMedica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelConsultaMedicaMouseClicked(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel15.setText("Peso");

        textPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPesoActionPerformed(evt);
            }
        });

        jLabel16.setText("Talla");

        jLabel17.setText("Temperatura");

        jLabel18.setText("F.C");

        jLabel19.setText("P.AR");

        jLabel20.setText("I.M.C");

        jLabel21.setText("I.M.B");

        jLabel22.setText("H2O");

        jLabel23.setText("M.M");

        jLabel25.setText("G.C");

        textTalla.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textTallaFocusLost(evt);
            }
        });

        textIMC.setEditable(false);

        textIMB.setEditable(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel17))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(textPAR)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(76, 76, 76)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel25))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textH2O, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(textGC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textIMC, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(textFC))
                        .addGap(79, 79, 79)
                        .addComponent(jLabel23)
                        .addGap(22, 22, 22)
                        .addComponent(textMM, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(textTalla, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(248, 248, 248)
                                .addComponent(jLabel21)
                                .addGap(18, 18, 18)
                                .addComponent(textIMB, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(textPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(textIMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel21)
                    .addComponent(textTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textIMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel22)
                    .addComponent(textTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textH2O, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23)
                    .addComponent(textFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel25)
                    .addComponent(textGC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel26.setText("A.S");

        jLabel27.setText("A.F");

        jLabel28.setText("PAP");

        jLabel29.setText("P.A");

        jLabel31.setText("Ex. Mamas");

        jLabel32.setText("S.S");

        jLabel35.setText("I.M");

        jLabel36.setText("I.V");

        jLabel37.setText("S.C");

        jLabel38.setText("G.M");

        jLabel39.setText("C.P");

        jLabel40.setText("E.S");

        jLabel44.setText("Curaciones");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(18, 18, 18)
                        .addComponent(chAS))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addGap(20, 20, 20)
                        .addComponent(chES)))
                .addGap(26, 26, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel37)
                    .addComponent(jLabel35))
                .addGap(75, 75, 75)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chSC)
                    .addComponent(chIM))
                .addGap(34, 34, 34)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel29))
                .addGap(39, 39, 39)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chAF)
                    .addComponent(chPA))
                .addGap(43, 43, 43)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(20, 20, 20)
                        .addComponent(chGM))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chIV)))
                .addGap(31, 31, 31)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chPAP))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(18, 18, 18)
                        .addComponent(chExMamas)))
                .addGap(42, 42, 42)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chCP))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addGap(33, 33, 33)
                        .addComponent(chCuraciones)))
                .addGap(18, 18, 18)
                .addComponent(jLabel32)
                .addGap(34, 34, 34)
                .addComponent(chSS)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel26)
                    .addComponent(chAS)
                    .addComponent(jLabel37)
                    .addComponent(chSC)
                    .addComponent(jLabel27)
                    .addComponent(chAF)
                    .addComponent(jLabel38)
                    .addComponent(chGM)
                    .addComponent(jLabel28)
                    .addComponent(chPAP)
                    .addComponent(jLabel39)
                    .addComponent(chCP)
                    .addComponent(jLabel32)
                    .addComponent(chSS))
                .addGap(42, 42, 42)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel36)
                    .addComponent(jLabel29)
                    .addComponent(jLabel35)
                    .addComponent(jLabel40)
                    .addComponent(jLabel31)
                    .addComponent(jLabel44)
                    .addComponent(chCuraciones)
                    .addComponent(chExMamas)
                    .addComponent(chIV)
                    .addComponent(chPA)
                    .addComponent(chIM)
                    .addComponent(chES))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        btnSignosVitalesGuardar.setText("Guardar");
        btnSignosVitalesGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignosVitalesGuardarActionPerformed(evt);
            }
        });

        btnSignosVitalesCancelar.setText("Cancelar");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSignosVitalesGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnSignosVitalesCancelar)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSignosVitalesCancelar)
                    .addComponent(btnSignosVitalesGuardar)))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Apuntes enfermería"));

        jLabel41.setText("Motivo");

        jLabel42.setText("Síntomas");

        textNotaEnfermeria.setColumns(20);
        textNotaEnfermeria.setRows(5);
        jScrollPane1.setViewportView(textNotaEnfermeria);

        jLabel4.setText("Nota de enfermeria");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addComponent(jLabel42))
                .addGap(30, 30, 30)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textMotivoConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(textSintomas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textMotivoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(textSintomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(209, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelConsultaMedica.addTab("Signos Vitales", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Cabeza"));

        jlOjos.setText("Ojos");

        jlOidos.setText("Oídos");

        cbOjos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));

        cbOidos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbOidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOidosActionPerformed(evt);
            }
        });

        jLabel6.setText("Nariz");

        cbNariz.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbNariz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNarizActionPerformed(evt);
            }
        });

        jLabel7.setText("Boca");

        cbBoca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbBoca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBocaActionPerformed(evt);
            }
        });

        jLabel8.setText("Tiroides");

        cbAdenopatias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));

        jLabel24.setText("Adenopatías");

        cbTiroides.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));

        cbDetallesOidos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Conductos", "Timpanos", "Otros" }));
        cbDetallesOidos.setEnabled(false);
        cbDetallesOidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesOidosActionPerformed(evt);
            }
        });

        cbDetallesNariz.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sinus Paranasales", "Cornetes", "Septum", "Otros" }));
        cbDetallesNariz.setEnabled(false);
        cbDetallesNariz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesNarizActionPerformed(evt);
            }
        });

        cbDetallesBoca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Garganta", "Tonsilas", "Faringe", "Lengua", "Otros" }));
        cbDetallesBoca.setEnabled(false);
        cbDetallesBoca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesBocaActionPerformed(evt);
            }
        });

        textOtrosDetallesOidos.setEnabled(false);

        textOtrosDetallesNariz.setEnabled(false);

        textOtrosDetallesBoca.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jlOidos)
                    .addComponent(jLabel6))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbBoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNariz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbDetallesOidos, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(cbDetallesBoca, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbDetallesNariz, 0, 1, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textOtrosDetallesNariz, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesOidos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesBoca, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel24)
                    .addComponent(jlOjos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbOjos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTiroides, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAdenopatias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbBoca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(textOtrosDetallesBoca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlOjos)
                                    .addComponent(cbOjos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(cbDetallesBoca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbTiroides, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlOidos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbDetallesOidos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textOtrosDetallesOidos, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbOidos, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbNariz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbDetallesNariz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textOtrosDetallesNariz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbAdenopatias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Tronco"));

        jLabel9.setText("Tórax");

        cbTorax.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbTorax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbToraxActionPerformed(evt);
            }
        });

        jLabel11.setText("Corazón");

        cbCorazon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbCorazon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCorazonActionPerformed(evt);
            }
        });

        jLabel12.setText("Abdomen");

        cbAbdomen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbAbdomen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAbdomenActionPerformed(evt);
            }
        });

        cbDetallesAbdomen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Visceromegalias", "Masas", "Dolor", "Peritonismo", "Otros" }));
        cbDetallesAbdomen.setEnabled(false);
        cbDetallesAbdomen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesAbdomenActionPerformed(evt);
            }
        });

        cbDetallesTorax.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Campos Pulmonares", "Otros" }));
        cbDetallesTorax.setEnabled(false);
        cbDetallesTorax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesToraxActionPerformed(evt);
            }
        });

        cbDetallesCorazon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Soplos", "Tonos", "Ritmo", "Otros" }));
        cbDetallesCorazon.setEnabled(false);
        cbDetallesCorazon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesCorazonActionPerformed(evt);
            }
        });

        textOtrosDetallesTorax.setEnabled(false);

        textOtrosDetallesCorazon.setEnabled(false);

        textOtrosDetallesAbdomen.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbAbdomen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCorazon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTorax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbDetallesAbdomen, 0, 155, Short.MAX_VALUE)
                    .addComponent(cbDetallesTorax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesCorazon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textOtrosDetallesTorax, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesCorazon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesAbdomen, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbTorax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesTorax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesTorax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbCorazon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesCorazon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesCorazon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbAbdomen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesAbdomen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesAbdomen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Sistemas"));

        jLabel33.setText("Sistema Esquelético");

        cbEsqueletico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbEsqueletico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEsqueleticoActionPerformed(evt);
            }
        });

        jLabel34.setText("Sistema Nervioso");

        cbNervioso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));

        jLabel2.setText("Sistema Urinario");

        cbUrinario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Anormal" }));
        cbUrinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUrinarioActionPerformed(evt);
            }
        });

        cbDetallesEsqueletico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Reflejos", "Fuerza", "Tono", "nL/anL", "Otros" }));
        cbDetallesEsqueletico.setEnabled(false);
        cbDetallesEsqueletico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesEsqueleticoActionPerformed(evt);
            }
        });

        cbDetallesUrinario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sangrado ", "Flujo", "Otros" }));
        cbDetallesUrinario.setEnabled(false);
        cbDetallesUrinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDetallesUrinarioActionPerformed(evt);
            }
        });

        textOtrosDetallesEsqueletico.setEnabled(false);

        textOtrosDetallesUrinario.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addComponent(jLabel2)
                    .addComponent(jLabel33))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbEsqueletico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUrinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbNervioso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDetallesEsqueletico, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesUrinario, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textOtrosDetallesEsqueletico, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesUrinario, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(cbEsqueletico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesEsqueletico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesEsqueletico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbUrinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDetallesUrinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textOtrosDetallesUrinario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNervioso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Cancelar");

        btnGuardarExamenFisico.setText("Guardar");
        btnGuardarExamenFisico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarExamenFisicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardarExamenFisico)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardarExamenFisico)
                    .addComponent(jButton2))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Apuntes médicos"));

        jLabel5.setText("Motivo");

        jLabel10.setText("Observaciones");

        jLabel13.setText("Tipo de evento");

        cbDiagnosticoOpcional.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Accidentes ofídicos", "Filariasis", "Leishmaniasis", "Conjuntivitis hemorrágicas", "Enfermedades diarreicas agudas (EDAS)", "Infecciones respiratoriasagudas (IRAS)", "Enfermedad tipo influenza (ETI)", "Pediculosis", "Anquilostomiasis", "Necatoriasis", "Ascariasis", "Depresión", "Trichuriasis", "Enterobiasis", "Otras Helmintiasis Intestinales", "Parasitosis intestinal sin especificar", "Otros padecimientos importantes" }));
        cbDiagnosticoOpcional.setToolTipText("Este diagnostico se usa para realizar el Informe Mensual de Enfermedades para el Ministerio de Salud");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textMotivo2)
                    .addComponent(textObservaciones)
                    .addComponent(cbDiagnosticoOpcional, 0, 317, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbDiagnosticoOpcional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textMotivo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(33, 33, 33)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(textObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Atendiendo a", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lblPacienteActual.setForeground(new java.awt.Color(186, 20, 20));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPacienteActual, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblPacienteActual, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnVerSignosVitales.setText("Ver Signos Vitales");
        btnVerSignosVitales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerSignosVitalesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 94, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(434, 434, 434)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerSignosVitales)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerSignosVitales))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2316, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        panelConsultaMedica.addTab("Examen Físico", jPanel2);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Adjuntar"));
        jPanel16.setMaximumSize(new java.awt.Dimension(543, 171));

        btnLabGabineteAdjuntarExamen.setText("Cargar");
        btnLabGabineteAdjuntarExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLabGabineteAdjuntarExamenActionPerformed(evt);
            }
        });

        textRutaLabGab.setEditable(false);
        textRutaLabGab.setAutoscrolls(false);
        textRutaLabGab.setMaximumSize(new java.awt.Dimension(10, 27));

        btnGuardarLabGab.setText("Guardar");
        btnGuardarLabGab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarLabGabActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardarLabGab, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(textRutaLabGab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnLabGabineteAdjuntarExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLabGabineteAdjuntarExamen)
                    .addComponent(textRutaLabGab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnGuardarLabGab)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Vista previa"));

        panelImagenLabGab.setAutoscrolls(true);

        javax.swing.GroupLayout panelImagenLabGabLayout = new javax.swing.GroupLayout(panelImagenLabGab);
        panelImagenLabGab.setLayout(panelImagenLabGabLayout);
        panelImagenLabGabLayout.setHorizontalGroup(
            panelImagenLabGabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1145, Short.MAX_VALUE)
        );
        panelImagenLabGabLayout.setVerticalGroup(
            panelImagenLabGabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 486, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(panelImagenLabGab);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2429, Short.MAX_VALUE))
        );

        panelConsultaMedica.addTab("Laboratorio & Gabinete", jPanel15);

        tabConsultaMedica.add(panelConsultaMedica, java.awt.BorderLayout.PAGE_START);

        tabExpediente.addTab("Consulta Medica", tabConsultaMedica);

        panelPrincipal.addTab("Expediente", tabExpediente);

        agendaPanelCalendario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Calendario", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        agendaCalendario.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                agendaCalendarioOnSelectionChange(evt);
            }
        });

        javax.swing.GroupLayout agendaPanelCalendarioLayout = new javax.swing.GroupLayout(agendaPanelCalendario);
        agendaPanelCalendario.setLayout(agendaPanelCalendarioLayout);
        agendaPanelCalendarioLayout.setHorizontalGroup(
            agendaPanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelCalendarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agendaCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        agendaPanelCalendarioLayout.setVerticalGroup(
            agendaPanelCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelCalendarioLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(agendaCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        agendaPanelActividades.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Actividades", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        agendaTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"08:00", null},
                {"08:15", null},
                {"08:30", null},
                {"08:45", null},
                {"09:00", null},
                {"09:15", null},
                {"09:30", null},
                {"09:45", null},
                {"10:00", null},
                {"10:15", null},
                {"10:30", null},
                {"10:45", null},
                {"11:00", null},
                {"11:15", null},
                {"11:30", null},
                {"11:45", null},
                {"12:00", null},
                {"12:30", null},
                {"13:00", null},
                {"13:30", null},
                {"14:00", null},
                {"14:30", null},
                {"15:00", null},
                {"15:30", null},
                {"16:00", null},
                {"16:30", null},
                {"17:00", null},
                {"17:30", null},
                {"20:00", null},
                {"21:00", null}
            },
            new String [] {
                "Hora", "Actividad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        agendaTabla.setComponentPopupMenu(popMenuAccionesActividad);
        agendaTabla.setRowHeight(35);
        agendaTabla.getTableHeader().setReorderingAllowed(false);
        agendaTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                agendaTablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(agendaTabla);
        if (agendaTabla.getColumnModel().getColumnCount() > 0) {
            agendaTabla.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        javax.swing.GroupLayout agendaPanelActividadesLayout = new javax.swing.GroupLayout(agendaPanelActividades);
        agendaPanelActividades.setLayout(agendaPanelActividadesLayout);
        agendaPanelActividadesLayout.setHorizontalGroup(
            agendaPanelActividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelActividadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        agendaPanelActividadesLayout.setVerticalGroup(
            agendaPanelActividadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelActividadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout agendaPanelPrincipalLayout = new javax.swing.GroupLayout(agendaPanelPrincipal);
        agendaPanelPrincipal.setLayout(agendaPanelPrincipalLayout);
        agendaPanelPrincipalLayout.setHorizontalGroup(
            agendaPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(agendaPanelCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(agendaPanelActividades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        agendaPanelPrincipalLayout.setVerticalGroup(
            agendaPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(agendaPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(agendaPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(agendaPanelActividades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(agendaPanelCalendario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        tapAgenda.addTab("Citas", agendaPanelPrincipal);

        panelPrincipal.addTab("Agenda", tapAgenda);
        panelPrincipal.addTab("Reportes", tabReportes);
        panelPrincipal.addTab("Inventario", tabInventario);
        panelPrincipal.addTab("Administrador", tabAdministrador);

        jMenuBar1.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N

        jMenu1.setText("Archivo");
        jMenu1.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Mantenimiento");
        jMenu2.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N

        jMenu4.setText("Paciente");

        jMenuItem2.setText("Datos Paciente");
        jMenu4.add(jMenuItem2);

        jMenu2.add(jMenu4);

        jMenu5.setText("Usuarios");

        jMenuItem3.setText("Cambiar Contraseña");
        jMenu5.add(jMenuItem3);

        jMenuItem4.setText("Añadir usuario");
        jMenu5.add(jMenuItem4);

        jMenu2.add(jMenu5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Lista de espera");
        jMenu3.setFont(new java.awt.Font("Droid Sans", 0, 14)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Pacientes a consulta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelPrincipal.getAccessibleContext().setAccessibleName("tab");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPacienteActionPerformed
       buscarPaciente();
    }//GEN-LAST:event_btnBuscarPacienteActionPerformed

    private void btnCrearExpedienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearExpedienteActionPerformed
        ExpedienteNuevo nuevo = new ExpedienteNuevo(this, true);
        nuevo.setVisible(true);
        cargarTablaBuscarPaciente();
    }//GEN-LAST:event_btnCrearExpedienteActionPerformed
    private boolean validaSVitales(){
        String validadorNumerico = ".*[1-9].*";
        boolean validado = false;
        javax.swing.JTextField [] 
                textsSignosVitales = {textFC, textGC, textH2O,
                                      textIMB, textIMC, textMM, 
                                      textPAR, textPeso,
                                      textTalla, textTemperatura};
            for(javax.swing.JTextField campo: textsSignosVitales){
                if(campo.getText().equals("") 
                        || textMotivoConsulta.getText().equals("")
                        || textSintomas.getText().equals(""))
                    return validado;
                else{
                    if(!regExValidation(validadorNumerico, campo)){
                        JOptionPane.showMessageDialog(this, "Valores Invalidos" 
                                            ,"Error", JOptionPane.ERROR_MESSAGE);
                    }
                        
                    else{
                        validado = true;
                        return validado;
                    }
                }
            }
                
            
        return validado;
    }
    
    private boolean regExValidation(String validador, JTextField campo) {
        java.util.regex.Pattern patronComparar;
        java.util.regex.Matcher comparador;
        patronComparar = java.util.regex.Pattern.compile(validador);
        comparador = patronComparar.matcher(campo.getText());
        return comparador.matches();  
    }
            
    private void limpiarSignosVitales() {
        javax.swing.JTextField [] 
            textsSignosVitales = {textFC, textGC, textH2O,
                                  textIMB, textIMC, textMM, 
                                  textMotivoConsulta, textPAR, textPeso,
                                  textTalla, textTemperatura, textSintomas};
        for(javax.swing.JTextField campo:textsSignosVitales)
            campo.setText("");
        
        textNotaEnfermeria.setText("");
        javax.swing.JCheckBox [] box = {chAF, chAS, chCP, chCuraciones,
                                        chES, chExMamas, chGM, chIM,
                                        chIV, chPA, chPAP, chSC, chSS};
        for(javax.swing.JCheckBox boxItem: box){
            if(boxItem.isSelected())
                boxItem.doClick();
        }
    }
    
    private void limpiarExamenFisico()
    {
        javax.swing.JComboBox comboPartes [] = {cbAbdomen, cbAdenopatias, cbBoca, cbCorazon, cbEsqueletico,
                                                cbNariz, cbNervioso, cbOidos, cbOjos, cbTiroides, cbTorax,
                                                cbUrinario, cbDetallesAbdomen, cbDetallesBoca, cbDetallesCorazon,
                                                cbDetallesEsqueletico, cbDetallesNariz, cbDetallesOidos, cbDetallesTorax,
                                                cbDetallesUrinario};
        
        for (javax.swing.JComboBox comboItem : comboPartes)
            comboItem.setSelectedIndex(0);
        
        javax.swing.JTextField camposDeTexto [] = {textOtrosDetallesAbdomen, textOtrosDetallesBoca, textOtrosDetallesCorazon,
                                                   textOtrosDetallesEsqueletico, textOtrosDetallesNariz,
                                                   textOtrosDetallesNariz, textOtrosDetallesOidos, textOtrosDetallesTorax,
                                                   textOtrosDetallesUrinario};
        
        for (javax.swing.JTextField fieldItem : camposDeTexto)
        {
            fieldItem.setText("");
            fieldItem.setEnabled(false);
        }// fin del for
        
        textMotivo2.setText("");
        cbDiagnosticoOpcional.setSelectedIndex(0);
        textObservaciones.setText("");
    }// fin del metodo limpiarExamenFisico

    private void ingresarSignosConsulta() throws NumberFormatException {
        entidad.SignosVitales signosV = new entidad.SignosVitales();
        signosV = obtenerSignosVitales(signosV);
        negocio.NegocioSignosVitales insertarSignosVitales = new negocio.NegocioSignosVitales();
        negocio.NegocioConsultaMedica insertarConsulta = new negocio.NegocioConsultaMedica();
        insertarSignosVitales.insertarSignosVitales(signosV);
        negocio.NegocioObtenerUltimoId obUltimoId = new negocio.NegocioObtenerUltimoId();
        entidad.ConsultaMedica nuevaConsulta = new entidad.ConsultaMedica();
        nuevaConsulta.setSignosVitales(Integer.parseInt(obUltimoId.obtenerUltimoId("SignosVitales")));
        nuevaConsulta.setFecha(obtenerFechaActual());
        nuevaConsulta.setIdexpediente(Integer.parseInt(obtenerIdExpedienteMedico()));
        nuevaConsulta.setMotivoConsulta(textMotivoConsulta.getText());
        nuevaConsulta.setSintomaPaciente(textSintomas.getText());
        nuevaConsulta.setNotaEnfermeria(textNotaEnfermeria.getText());
        nuevaConsulta.setEstado(EstadoConsultaMedicaEnum.INCOMPLETA);
        insertarConsulta.insertarConsultaMedica(nuevaConsulta);
    }

    private String obtenerFechaActual() {
        Calendar calendario = Calendar.getInstance();
        int day = calendario.get(Calendar.DAY_OF_MONTH);
        int month = calendario.get(Calendar.MONTH) + 1;
        int year = calendario.get(Calendar.YEAR);
        return year + "-" + month + "-" + day;
    }

    private entidad.SignosVitales obtenerSignosVitales(SignosVitales signosV) throws NumberFormatException {
        if(chAF.isSelected())
            signosV.setActividadFisica(1);
        else
            signosV.setActividadFisica(0);
        if(chAS.isSelected())
            signosV.setAlimentacionSaludable(1);
        else
            signosV.setAlimentacionSaludable(0);
        if(chCP.isSelected())
            signosV.setCuidadoPrenatal(1);
        else
            signosV.setCuidadoPrenatal(0);
        if(chCuraciones.isSelected())
            signosV.setCuraciones(1);
        else
            signosV.setCuraciones(0);
        if(chES.isSelected())
            signosV.setEntornoSaludable(1);
        else
            signosV.setEntornoSaludable(0);
        if(chExMamas.isSelected())
            signosV.setExamenMama(1);
        else
            signosV.setExamenMama(0);
        if(chGM.isSelected())
            signosV.setGlicemiaMicroMetodo(1);
        else
            signosV.setGlicemiaMicroMetodo(0);
        if(chIM.isSelected())
            signosV.setTratamientoIntramuscular(1);
        else
            signosV.setTratamientoIntramuscular(0);
        if(chIV.isSelected())
            signosV.setTratamientoIntravenoso(1);
        else
            signosV.setTratamientoIntravenoso(0);
        if(chSC.isSelected())
            signosV.setTratamientoSubcutaneo(1);
        else
            signosV.setTratamientoSubcutaneo(0);
        if(chPA.isSelected())
            signosV.setPrevencionAdicciones(1);
        else 
            signosV.setPrevencionAdicciones(0);
        if(chSS.isSelected())
            signosV.setSaludSexual(1);
        else
            signosV.setSaludSexual(0);
        if(chPAP.isSelected())
            signosV.setPapanicolaou(1);
        else
            signosV.setPapanicolaou(0);
        signosV.setAguaCorporal(Double.parseDouble(textH2O.getText()));
        signosV.setGrasaCorporal(Double.parseDouble(textGC.getText()));
        signosV.setIndiceMasaCorporal(Double.parseDouble(textIMC.getText()));
        signosV.setIndiceMetabolicoBasal(Double.parseDouble(textIMB.getText()));
        signosV.setPeso(Double.parseDouble(textPeso.getText()));
        signosV.setPresionArterial(textPAR.getText());
        signosV.setTalla(Double.parseDouble(textTalla.getText()));
        signosV.setTemperatura(Double.parseDouble(textTemperatura.getText()));
        signosV.setFrecuenciaCardiaca(Integer.parseInt(textFC.getText()));
        signosV.setMasaCorporal(Double.parseDouble(textMM.getText()));
        return signosV;
    }
    
   
    private void agendaTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agendaTablaMouseClicked
    
    }//GEN-LAST:event_agendaTablaMouseClicked

    private void insertarNuevaActividad() {
        // al presionar la actividad de la tabla mostrar menu para ingresar actividad en caso de que no exista
        AgendaActividad nuevaActividad = new AgendaActividad(this, true);
        nuevaActividad.setVisible(true);
        String idPac = nuevaActividad.getIdPaciente();
        String actividad = nuevaActividad.getDetalles();
        String fechaSeleccionada;
        String horaActividad;
        fechaSeleccionada = obtenerFechaCalendario();
        try{
            agendaTabla.setValueAt(actividad, agendaTabla.getSelectedRow(), 1);
            horaActividad = agendaTabla.getValueAt(agendaTabla.getSelectedRow(), 0).toString();
            entidad.Cita nuevaCita = new entidad.Cita();
            
            // la siguiente linea es para probar si esta ingresando correctamente el estado
            if(!actividad.isEmpty()){
                nuevaCita.setEstado(EstadoCitaEnum.Pendiente);
                nuevaCita.setFechaConsulta(fechaSeleccionada);
                nuevaCita.setHora(horaActividad);
                nuevaCita.setAnotaciones(actividad);
                negocio.NegocioCita insertarCita = new negocio.NegocioCita();
                insertarCita.insertarCita(nuevaCita);
            }
            else
                JOptionPane.showMessageDialog(this, "Nada que insertar");
            if(!idPac.isEmpty()){
                // Llene la tabla de relacion.
                negocio.NegocioObtenerUltimoId idCita;
                idCita = new negocio.NegocioObtenerUltimoId();
                String idC = idCita.obtenerUltimoId("cita");
                negocio.NegocioCita cita = new negocio.NegocioCita();
                cita.insertarCitaPaciente(idC, idPac);
            }
           
        }
        catch(NullPointerException e){
        }
    }

    private void agendaCalendarioOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_agendaCalendarioOnSelectionChange
        limpiaAgenda();
        cargarActividadesAgenda();
    }//GEN-LAST:event_agendaCalendarioOnSelectionChange

    private void limpiaAgenda() {
        for(int i = 0; i < 30; i++)
            agendaTabla.setValueAt("", i, 1);
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cargarTablaBuscarPaciente();
    }//GEN-LAST:event_formWindowOpened

    private void cargarTablaBuscarPaciente() {
        java.sql.ResultSet rs;
        negocio.NegocioExpedienteMedico opExpediente = new negocio.NegocioExpedienteMedico();
        try {
            rs = opExpediente.obtenerExpedientePaciente();
            DefaultTableModel nuevoModeloTabla = new DefaultTableModel();
            this.tableBuscarPaciente.setModel(nuevoModeloTabla);
            String [] nombreColumnas = {"Id", "Cédula", "Nombre",
                                        "Primer Apellido", "Segundo Apellido",
                                        "Fecha Nacimiento", "sexo"};
            for(int i = 0; i < 7; i++)
                nuevoModeloTabla.addColumn(nombreColumnas[i]);
            while(rs.next()){
                Object [] fila = new Object[7];
                for(int i = 0; i < 7; i++)
                    fila[i] = rs.getObject(i+1);
                nuevoModeloTabla.addRow(fila);
                
            }
            escondeColumna(0);
            escondeColumna(6);
            
        } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
//        try {
//            cargarActividadesAgenda();
//        } catch (SQLException ex) {
//            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void escondeColumna(int numCol) {
        tableBuscarPaciente.getColumnModel().getColumn(numCol).setMaxWidth(0);
        tableBuscarPaciente.getColumnModel().getColumn(numCol).setMinWidth(0);
        tableBuscarPaciente.getColumnModel().getColumn(numCol).setPreferredWidth(0);
    }

    private void btnConsultaMedicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaMedicaActionPerformed
       // Obtener el idPaciente de la fila seleccionada.
        
        try{
            int filaSeleccionada = this.tableBuscarPaciente.getSelectedRow();
            idPaciente = tableBuscarPaciente.getValueAt(filaSeleccionada, 0).toString();
            if(filaSeleccionada == -1)
                JOptionPane.showMessageDialog(rootPane, "Por favor seleccione un paciente.");
            else{
                this.idPaciente = tableBuscarPaciente.getValueAt(filaSeleccionada, 0).toString();
                splitFechaNac(tableBuscarPaciente.getValueAt(filaSeleccionada, 5).toString());
                this.sexo = Integer.parseInt(tableBuscarPaciente.getValueAt(filaSeleccionada, 6).toString());
                this.tabExpediente.setSelectedIndex(1);
            }   
        }
        catch(ArrayIndexOutOfBoundsException ae){
            JOptionPane.showMessageDialog(this, "Parece que no hay expedientes, cree uno nuevo para continuar.",null, JOptionPane.ERROR_MESSAGE);
        }
          
    }//GEN-LAST:event_btnConsultaMedicaActionPerformed

    private void panelPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPrincipalMouseClicked
        cargarActividadesAgenda();
    }//GEN-LAST:event_panelPrincipalMouseClicked

    private void textBuscarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBuscarPacienteActionPerformed
        if(textBuscarPaciente.getText().equals(""))
        cargarTablaBuscarPaciente();
    }//GEN-LAST:event_textBuscarPacienteActionPerformed
    private void actualizarConsulta(){
        entidad.ConsultaMedica consulta = new entidad.ConsultaMedica();
        String diagOp = cbDiagnosticoOpcional.getSelectedItem().toString();
        consulta.setDiagnostico(diagOp);
        consulta.setMotivo2(textMotivo2.getText());
        consulta.setEstado(EstadoConsultaMedicaEnum.COMPLETA);
        consulta.setObservaciones(textObservaciones.getText());
        negocio.NegocioConsultaMedica actConsulta = new negocio.NegocioConsultaMedica();
        String fecha= obtenerFechaActual();
        actConsulta.actualizarConsultaMedica(this.idExpediente, consulta, fecha);
        
    }
    private void insertarExamenFisico(){
        
        /*if (! verificarVacios())
            JOptionPane.showMessageDialog(null, 
                    "Uno o mas campos de texto estan vacios y requieren ser llenados", "Información", 
                    JOptionPane.INFORMATION_MESSAGE);*/
        
        //else {
            ArrayList<entidad.ExamenFisico> listaExamen = new ArrayList<>();
//            listaExamen = obtenerDatosExamenFisico(listaExamen);
            obtenerDatosExamenFisico(listaExamen);
            insertarAnormalidadesExFisico(listaExamen);
        //}// fin del else
    }

    private void insertarAnormalidadesExFisico(ArrayList<ExamenFisico> listaExamen) {
        negocio.NegocioExamenFisico nuevoExFisico = new negocio.NegocioExamenFisico();
        for(entidad.ExamenFisico examen:listaExamen){
            examen.setConsultaMedica(Integer.parseInt(idConsultaMedica));
            nuevoExFisico.insertarExamenFisico(examen);
        }
    }

    private ArrayList obtenerDatosExamenFisico(ArrayList<ExamenFisico> listaExamen) {
        // Se llena la lista con los items seleccionados.
        if(cbOjos.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Ojos");
            listaExamen.add(nuevoExamen);
                        
        }
        if(cbOidos.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Oidos");
            nuevoExamen.setSubCategoria(cbDetallesOidos.getSelectedItem().toString());
            if(textOtrosDetallesOidos.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesOidos.getText());
            listaExamen.add(nuevoExamen);
        }
        if(cbNariz.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Nariz");
            nuevoExamen.setSubCategoria(cbDetallesNariz.getSelectedItem().toString());
            if(textOtrosDetallesNariz.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesNariz.getText());
            listaExamen.add(nuevoExamen);
        }
        if(cbBoca.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Boca");
            nuevoExamen.setSubCategoria(cbDetallesBoca.getSelectedItem().toString());
            if(textOtrosDetallesBoca.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesBoca.getText());
            listaExamen.add(nuevoExamen);
        }
        if(cbAdenopatias.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Adenopatias");
            nuevoExamen.setSubCategoria("");
            listaExamen.add(nuevoExamen);
        }
        if(cbCorazon.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Corazon");
            nuevoExamen.setSubCategoria(cbDetallesCorazon.getSelectedItem().toString());
            if(textOtrosDetallesCorazon.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesCorazon.getText());
            listaExamen.add(nuevoExamen);    
        }
        if(cbEsqueletico.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Esqueletico");
            nuevoExamen.setSubCategoria(cbDetallesEsqueletico.getSelectedItem().toString());
            if(textOtrosDetallesEsqueletico.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesEsqueletico.getText());
            listaExamen.add(nuevoExamen);
        }
        if(cbNervioso.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Nervioso");
            listaExamen.add(nuevoExamen);
        }
        if(cbUrinario.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Urinario");
            nuevoExamen.setSubCategoria(cbDetallesUrinario.getSelectedItem().toString());
            if(textOtrosDetallesUrinario.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesUrinario.getSelectedText());
            listaExamen.add(nuevoExamen);    
        }
        if(cbAbdomen.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Abdomen");
            nuevoExamen.setSubCategoria(cbDetallesAbdomen.getSelectedItem().toString());
            if(textOtrosDetallesAbdomen.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesAbdomen.getText());
            listaExamen.add(nuevoExamen);
        }
        if(cbTorax.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Torax");
            nuevoExamen.setSubCategoria(cbDetallesTorax.getSelectedItem().toString());
            if(textOtrosDetallesTorax.isEnabled())
                nuevoExamen.setDetalle(textOtrosDetallesTorax.getText());
            listaExamen.add(nuevoExamen);
        }
        if(cbTiroides.getSelectedIndex() == 1){
            entidad.ExamenFisico nuevoExamen = new entidad.ExamenFisico();
            nuevoExamen.setCategoria("Tiroides");
            nuevoExamen.setSubCategoria("");
            listaExamen.add(nuevoExamen);
        }
        return listaExamen;
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        PacientesConsulta pacientesConsulta = new PacientesConsulta(this, true);
        pacientesConsulta.setVisible(true);
        idExpediente = pacientesConsulta.getIdExpedienteMedico();
        pacienteActual = pacientesConsulta.getPacienteActual();
        idConsultaMedica = pacientesConsulta.getIdConsultaMedica();
        idSVitales = pacientesConsulta.getIdSignosVitales();
        this.lblPacienteActual.setText(pacienteActual);  
        rc.cargarCamposDeTexto(pacienteActual, obtenerFechaActual(), idExpediente);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void insertarLabGab(File fichero) throws NumberFormatException {
        negocio.NegocioLaboratorioGabinete inLab;
        inLab = new negocio.NegocioLaboratorioGabinete();
        if(idExpediente == null)
            JOptionPane.showMessageDialog(null, "No se asoció ninguna persona a este archivo",
                                            "Error", JOptionPane.ERROR_MESSAGE);
        else
            inLab.guardarExamen(fichero, Integer.parseInt(idExpediente));
    }
    
    private void popItemNuevaActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popItemNuevaActividadActionPerformed
        final int selectedRow = agendaTabla.getSelectedRow();
        if(selectedRow != -1){
            if(agendaTabla.getValueAt(selectedRow, 1) == null)
                insertarNuevaActividad();
            else
                JOptionPane.showMessageDialog(this, "Ya existe una actividad, "
                        + "debe borrarla antes de asignar un nuevo espacio",
                        "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "No seleccionó ninguna fila", 
                                        "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_popItemNuevaActividadActionPerformed

    private void popItemCompletarActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popItemCompletarActividadActionPerformed
        entidad.Cita actCita = new entidad.Cita();
        String fecha = obtenerFechaCalendario();
        String hora;
        int fila  = agendaTabla.getSelectedRow();
        if(fila != -1){
           hora = agendaTabla.getValueAt(fila, 0).toString();
           actCita.setEstado(EstadoCitaEnum.Completada);
           actCita.setHora(hora);
           actCita.setFechaConsulta(fecha);
           negocio.NegocioCita cita = new negocio.NegocioCita();
           cita.actualizarCita(actCita);
           cargarActividadesAgenda();
        }
        else
            JOptionPane.showMessageDialog(this, "No seleccionó ninguna fila",
                                            "Error", JOptionPane.ERROR_MESSAGE);    
    }//GEN-LAST:event_popItemCompletarActividadActionPerformed

    private void btnRefrescarTablaBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarTablaBuscarActionPerformed
        cargarTablaBuscarPaciente();
    }//GEN-LAST:event_btnRefrescarTablaBuscarActionPerformed

    private void popItemEliminarActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popItemEliminarActividadActionPerformed
        int fila = agendaTabla.getSelectedRow();
        String fecha = obtenerFechaCalendario();
        
        if(fila != -1){
            String hora = agendaTabla.getValueAt(fila, 0).toString();
            entidad.Cita cita = new entidad.Cita();
            cita.setHora(hora);
            cita.setFechaConsulta(fecha);
            negocio.NegocioCita eliCita = new negocio.NegocioCita();
            eliCita.eliminarCita(cita);
            cargarActividadesAgenda();
        }
        else
            JOptionPane.showMessageDialog(this, "No seleccionó ninguna fila",
                                            "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_popItemEliminarActividadActionPerformed

    private void panelPrincipalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_panelPrincipalStateChanged
        if(panelPrincipal.getSelectedIndex() == 3){
            // Evita que se agregue el panel mas de una vez.
            if(tabInventario.getComponentCount() <= 0){
                ContenedorInventario ci = new ContenedorInventario(this);
                tabInventario.addTab("Medicamentos & Utensilios", ci); 
            }      
        }
        if(panelPrincipal.getSelectedIndex() == 2){
            if(tabReportes.getComponentCount() <= 0){
                ContenedorReportes  cr = new ContenedorReportes();
                tabReportes.addTab("Reportes", cr);
            }
        }
        if(panelPrincipal.getSelectedIndex() == 0){
            if(panelConsultaMedica.getComponentCount() < 4){
                rc = new ContenedorReceta(); 
                panelConsultaMedica.addTab("Receta", rc);
            }
        }
    }//GEN-LAST:event_panelPrincipalStateChanged

    private void panelConsultaMedicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelConsultaMedicaMouseClicked
        // evento del panel de consulta medica
    }//GEN-LAST:event_panelConsultaMedicaMouseClicked

    private void btnGuardarLabGabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarLabGabActionPerformed
        if(fichero != null)
        insertarLabGab(fichero);
        else
        JOptionPane.showMessageDialog(this, "No seleccionó ningún archivo",
            "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnGuardarLabGabActionPerformed

    private void btnLabGabineteAdjuntarExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLabGabineteAdjuntarExamenActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        int seleccion = fileChooser.showSaveDialog(this);
        if(seleccion == JFileChooser.APPROVE_OPTION){

            fichero = fileChooser.getSelectedFile();
            textRutaLabGab.setText(fichero.getPath());
            ImagenLabGab img = new ImagenLabGab(panelImagenLabGab, fichero.getPath());
            panelImagenLabGab.add(img).repaint();
        }
    }//GEN-LAST:event_btnLabGabineteAdjuntarExamenActionPerformed

    private void btnVerSignosVitalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerSignosVitalesActionPerformed

    }//GEN-LAST:event_btnVerSignosVitalesActionPerformed

    private void btnGuardarExamenFisicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarExamenFisicoActionPerformed

        if (! verificarVacios())
        JOptionPane.showMessageDialog(null, "Uno o mas campos son requeridos",
            "Información", JOptionPane.INFORMATION_MESSAGE);

        else {
            final String tipoEvento = cbDiagnosticoOpcional.getSelectedItem().toString();
            if(!tipoEvento.equalsIgnoreCase("Seleccione")){
                insertarExamenFisico();
                actualizarConsulta();
                limpiarExamenFisico();
            }
            else
            JOptionPane.showMessageDialog(this, "Seleccione el tipo de evento"
                ,"Error", JOptionPane.ERROR_MESSAGE);
            //tabExpediente.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_btnGuardarExamenFisicoActionPerformed

    private void cbDetallesUrinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesUrinarioActionPerformed
        // TODO add your handling code here:
        if (cbDetallesUrinario.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesUrinario.setEnabled(true);
        }

        else
        textOtrosDetallesUrinario.setEnabled(false);
    }//GEN-LAST:event_cbDetallesUrinarioActionPerformed

    private void cbDetallesEsqueleticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesEsqueleticoActionPerformed
        // TODO add your handling code here:
        if (cbDetallesEsqueletico.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesEsqueletico.setEnabled(true);
        }

        else
        textOtrosDetallesEsqueletico.setEnabled(false);
    }//GEN-LAST:event_cbDetallesEsqueleticoActionPerformed

    private void cbUrinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUrinarioActionPerformed
        // TODO add your handling code here:
        if (cbUrinario.getSelectedItem().toString().equals("Anormal")){
            cbDetallesUrinario.setEnabled(true);
        }// fin del if

        else {
            cbDetallesUrinario.setEnabled(false);
            textOtrosDetallesUrinario.setEnabled(false);
            cbDetallesUrinario.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbUrinarioActionPerformed

    private void cbEsqueleticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEsqueleticoActionPerformed
        // TODO add your handling code here:
        if (cbEsqueletico.getSelectedItem().toString().equals("Anormal")){
            cbDetallesEsqueletico.setEnabled(true);
        }// fin del if

        else {
            cbDetallesEsqueletico.setEnabled(false);
            textOtrosDetallesEsqueletico.setEnabled(false);
            cbDetallesEsqueletico.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbEsqueleticoActionPerformed

    private void cbDetallesCorazonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesCorazonActionPerformed
        // TODO add your handling code here:
        if (cbDetallesCorazon.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesCorazon.setEnabled(true);
        }

        else
        textOtrosDetallesCorazon.setEnabled(false);
    }//GEN-LAST:event_cbDetallesCorazonActionPerformed

    private void cbDetallesToraxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesToraxActionPerformed
        // TODO add your handling code here:
        if (cbDetallesTorax.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesTorax.setEnabled(true);
        }

        else
        textOtrosDetallesTorax.setEnabled(false);
    }//GEN-LAST:event_cbDetallesToraxActionPerformed

    private void cbDetallesAbdomenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesAbdomenActionPerformed
        // TODO add your handling code here:
        if (cbDetallesAbdomen.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesAbdomen.setEnabled(true);
        }

        else
        textOtrosDetallesAbdomen.setEnabled(false);
    }//GEN-LAST:event_cbDetallesAbdomenActionPerformed

    private void cbAbdomenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAbdomenActionPerformed
        // TODO add your handling code here:
        if (cbAbdomen.getSelectedItem().toString().equals("Anormal")){
            cbDetallesAbdomen.setEnabled(true);
        }

        else {
            cbDetallesAbdomen.setEnabled(false);
            textOtrosDetallesAbdomen.setEnabled(false);
            cbDetallesAbdomen.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbAbdomenActionPerformed

    private void cbCorazonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCorazonActionPerformed
        // TODO add your handling code here:
        if (cbCorazon.getSelectedItem().toString().equals("Anormal")){
            cbDetallesCorazon.setEnabled(true);
        }// fin del if

        else {
            cbDetallesCorazon.setEnabled(false);
            textOtrosDetallesCorazon.setEnabled(false);
            cbDetallesCorazon.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbCorazonActionPerformed

    private void cbToraxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbToraxActionPerformed
        // TODO add your handling code here:
        if (cbTorax.getSelectedItem().toString().equals("Anormal")){
            cbDetallesTorax.setEnabled(true);
        }// fin del if

        else {
            cbDetallesTorax.setEnabled(false);
            textOtrosDetallesTorax.setEnabled(false);
            cbDetallesTorax.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbToraxActionPerformed

    private void cbDetallesBocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesBocaActionPerformed
        // TODO add your handling code here:
        if (cbDetallesBoca.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesBoca.setEnabled(true);
        }

        else
        textOtrosDetallesBoca.setEnabled(false);
    }//GEN-LAST:event_cbDetallesBocaActionPerformed

    private void cbDetallesNarizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesNarizActionPerformed
        // TODO add your handling code here:
        if (cbDetallesNariz.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesNariz.setEnabled(true);
        }

        else
        textOtrosDetallesNariz.setEnabled(false);
    }//GEN-LAST:event_cbDetallesNarizActionPerformed

    private void cbDetallesOidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDetallesOidosActionPerformed
        // TODO add your handling code here:
        if (cbDetallesOidos.getSelectedItem().toString().equals("Otros")){
            textOtrosDetallesOidos.setEnabled(true);
        }

        else
        textOtrosDetallesOidos.setEnabled(false);
    }//GEN-LAST:event_cbDetallesOidosActionPerformed

    private void cbBocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBocaActionPerformed
        // TODO add your handling code here:
        if (cbBoca.getSelectedItem().toString().equals("Anormal")){
            cbDetallesBoca.setEnabled(true);
        }// fin del if

        else {
            cbDetallesBoca.setEnabled(false);
            textOtrosDetallesBoca.setEnabled(false);
            cbDetallesBoca.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbBocaActionPerformed

    private void cbNarizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNarizActionPerformed
        // TODO add your handling code here:
        if (cbNariz.getSelectedItem().toString().equals("Anormal")){
            cbDetallesNariz.setEnabled(true);
        }// fin del if

        else {
            cbDetallesNariz.setEnabled(false);
            textOtrosDetallesNariz.setEnabled(false);
            cbDetallesNariz.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbNarizActionPerformed

    private void cbOidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOidosActionPerformed
        // TODO add your handling code here:
        if (cbOidos.getSelectedItem().toString().equals("Anormal")){
            cbDetallesOidos.setEnabled(true);
        }// fin del if

        else {
            cbDetallesOidos.setEnabled(false);
            textOtrosDetallesOidos.setEnabled(false);
            cbDetallesOidos.setSelectedIndex(0);
        }// fin del else
    }//GEN-LAST:event_cbOidosActionPerformed

    private void btnSignosVitalesGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignosVitalesGuardarActionPerformed
        if(validaSVitales()){
            ingresarSignosConsulta();
            limpiarSignosVitales();
        }
        else
        JOptionPane.showMessageDialog(this, "Parecen haber datos incompletos"
            + "o erroneos", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnSignosVitalesGuardarActionPerformed

    private void textTallaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textTallaFocusLost
        if(!textPeso.getText().equals("") || !textTalla.getText().equals("")){
            calcularImc();
            calcularImb();
        }
    }//GEN-LAST:event_textTallaFocusLost

    private void textPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPesoActionPerformed
    private void splitFechaNac(String fecha){
        String year = "";
        String month = "";
        String day = "";
        int [] indexY = {0, 1, 2, 3};
        int [] indexM = {5, 6};
        int [] indexD = {8, 9};
        for(int i:indexY)
            year += fecha.charAt(i);
        this.yearBirth = Integer.parseInt(year);
        for(int m:indexM)
            month += fecha.charAt(m);
        this.monthBirth = Integer.parseInt(month);
        for(int d:indexD)
            day += fecha.charAt(d);
        this.dayBirth = Integer.parseInt(day);
    }
    
    private void calcularImb(){
        try{
            final double peso = Double.parseDouble(textPeso.getText());
            final double talla = Double.parseDouble(textTalla.getText());
            double imb = 0.0;
            negocio.CalculoSignosVitales nSignos;
            negocio.Edad nEdad = new negocio.Edad();
            int edad = Integer.parseInt(nEdad.getAge(this.yearBirth, this.monthBirth, this.dayBirth));
            nSignos = new negocio.CalculoSignosVitales();
            switch(this.sexo){
                case 1: imb = nSignos.getIndiceMetabolicoBasal(SexoEnum.MASCULINO, peso, talla, edad);
                    break;
                case 2: imb = nSignos.getIndiceMetabolicoBasal(SexoEnum.FEMENINO, peso, talla, edad);
                    break;
            }
            textIMB.setText(Double.toString(imb));
        }
        catch(NumberFormatException nfe){
            System.out.println(nfe.getMessage());
        }
    }
    
    private void calcularImc(){
        try{
            final double peso = Double.parseDouble(textPeso.getText());
            double talla = Double.parseDouble(textTalla.getText());
            talla = talla / 100;
            negocio.CalculoSignosVitales nSignos;
            nSignos = new negocio.CalculoSignosVitales();
            double imc = nSignos.getIndiceMasaCorporal(peso, talla);
            textIMC.setText(Double.toString(imc)); 
        }
        catch(NumberFormatException nfe){
            System.out.println(nfe.getMessage());
        }     
    }

    private String obtenerFechaCalendario() {
        int year = agendaCalendario.getCurrent().get(Calendar.YEAR);
        int month = agendaCalendario.getCurrent().get(Calendar.MONTH) + 1;
        int day = agendaCalendario.getCurrent().get(Calendar.DAY_OF_MONTH);
        String fecha = year + "-" + month + "-" + day;
        return fecha;
    }
    private String obtenerIdExpedienteMedico(){
        negocio.NegocioExpedienteMedico consExp = new negocio.NegocioExpedienteMedico();
        String idExp = consExp.obtenerIdExpedienteMedico(idPaciente);
        return idExp;
    }
    private void cargarActividadesAgenda(){
        // DEPURAR CODIGO.
        String fechaSeleccionada;
        fechaSeleccionada = "'" +obtenerFechaCalendario() + "'";
        final String arregloHoras [] = {"08:00","08:15","08:30", "08:45", "09:00", 
                                  "09:15", "09:30", "09:45", "10:00", "10:15", 
                                  "10:30",  "10:45", "11:00", "11:15", "11:30",
                                  "11:45", "12:00", "12:30", "13:00", "13:30",
                                  "14:00", "14:30","15:00","15:30", "16:00",
                                  "16:30", "17:00","17:30",  "20:00", "21:00"};
        negocio.NegocioCita obtenerCitas = new negocio.NegocioCita();
        try{
            java.sql.ResultSet rs = obtenerCitas.obtenerFechaConsulta(fechaSeleccionada);
            java.util.LinkedList<String> listHoraConsulta = new java.util.LinkedList<>();
            java.util.LinkedList<String> listAnotaciones = new java.util.LinkedList<>();
            while(rs.next()){
                listHoraConsulta.add(rs.getString("horaConsulta"));
                switch(Integer.parseInt(rs.getString("estado"))){
                    case 1:listAnotaciones.add(rs.getString("anotaciones")+" Pendiente");
                        break;
                    case 2: listAnotaciones.add(rs.getString("anotaciones")+" Completa");
                        break;
                }

            }
            rs.close();
            for(String appointment:listHoraConsulta){
                for(int i = 0; i < arregloHoras.length; i++){
                    if(arregloHoras[i].equals(appointment))
                        agendaTabla.setValueAt(listAnotaciones.removeFirst(), i, 1);
                }
            }
        }
        catch(SQLException e){
            System.out.println(e.getErrorCode() + e.getMessage());
        }
        
       
    }
    private void buscarPaciente(){
        java.util.LinkedList<String> paciente = new java.util.LinkedList<>();
        int numeroFilas = tableBuscarPaciente.getRowCount();
        
        
        if(contador <= 0){
            backUpList = new String[numeroFilas][6];
            for(int i = 0; i < numeroFilas; i++){
                for(int j = 0; j < 6; j++)
                    backUpList[i][j] = tableBuscarPaciente.getValueAt(i, j).toString();
            }
            contador ++;
        }
        
        for(int i = 0; i < numeroFilas; i++)
            if(backUpList[i][1].equals(textBuscarPaciente.getText().trim())){
                for(int j = 0; j < 6; j++)
                    paciente.add(backUpList[i][j]);
            }
        if(paciente.size() == 0)
            JOptionPane.showMessageDialog(this, "No se encontraron registros",
                                          "Error", JOptionPane.ERROR_MESSAGE);
        else{
            // Limpia el contenido actual
            for(int k = 0; k < numeroFilas; k++)
                for(int l = 0; l < 6; l++)
                    tableBuscarPaciente.setValueAt("", k, l);
            // Posiciona el resultado en la primer fila
            for(int p = 0; p < paciente.size(); p++){
                for(int q = 0; q < 6; q++)
                    tableBuscarPaciente.setValueAt(paciente.removeFirst(), p, q);
            }
        } 
    }

    public boolean verificarVacios()
    {
        boolean vacio = true;
        
        if (textOtrosDetallesOidos.isEnabled())
            if (textOtrosDetallesOidos.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesNariz.isEnabled())
            if (textOtrosDetallesNariz.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesBoca.isEnabled())
            if (textOtrosDetallesBoca.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesTorax.isEnabled())
            if (textOtrosDetallesTorax.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesCorazon.isEnabled())
            if (textOtrosDetallesCorazon.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesAbdomen.isEnabled())
            if (textOtrosDetallesAbdomen.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesEsqueletico.isEnabled())
            if (textOtrosDetallesEsqueletico.getText().isEmpty())
                vacio = false;
        
        if (textOtrosDetallesUrinario.isEnabled())
            if (textOtrosDetallesUrinario.getText().isEmpty())
                vacio = false;
        
        
        if (textMotivo2.getText().isEmpty())
            vacio = false;
        
        return vacio;
    }// fin del metodo verificarVacios
    
    
    public String getPacienteActual()
    {
        return pacienteActual;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        try
    {
        BeautyEyeLNFHelper.frameBorderStyle = BeautyEyeLNFHelper.FrameBorderStyle.osLookAndFeelDecorated;
        UIManager.put("RootPane.setupButtonVisible", false);
        org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
        
    }
    catch(Exception e)
    {
        //TODO exception
    }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserPanel agendaCalendario;
    private javax.swing.JPanel agendaPanelActividades;
    private javax.swing.JPanel agendaPanelCalendario;
    private javax.swing.JPanel agendaPanelPrincipal;
    private javax.swing.JTable agendaTabla;
    private javax.swing.JButton btnBuscarPaciente;
    private javax.swing.JButton btnConsultaMedica;
    private javax.swing.JButton btnCrearExpediente;
    private javax.swing.JButton btnGuardarExamenFisico;
    private javax.swing.JButton btnGuardarLabGab;
    private javax.swing.JButton btnLabGabineteAdjuntarExamen;
    private javax.swing.JButton btnRefrescarTablaBuscar;
    private javax.swing.JButton btnSignosVitalesCancelar;
    private javax.swing.JButton btnSignosVitalesGuardar;
    private javax.swing.JButton btnVerSignosVitales;
    private javax.swing.JComboBox cbAbdomen;
    private javax.swing.JComboBox cbAdenopatias;
    private javax.swing.JComboBox cbBoca;
    private javax.swing.JComboBox cbCorazon;
    private javax.swing.JComboBox cbDetallesAbdomen;
    private javax.swing.JComboBox cbDetallesBoca;
    private javax.swing.JComboBox cbDetallesCorazon;
    private javax.swing.JComboBox cbDetallesEsqueletico;
    private javax.swing.JComboBox cbDetallesNariz;
    private javax.swing.JComboBox cbDetallesOidos;
    private javax.swing.JComboBox cbDetallesTorax;
    private javax.swing.JComboBox cbDetallesUrinario;
    private javax.swing.JComboBox cbDiagnosticoOpcional;
    private javax.swing.JComboBox cbEsqueletico;
    private javax.swing.JComboBox cbNariz;
    private javax.swing.JComboBox cbNervioso;
    private javax.swing.JComboBox cbOidos;
    private javax.swing.JComboBox cbOjos;
    private javax.swing.JComboBox cbTiroides;
    private javax.swing.JComboBox cbTorax;
    private javax.swing.JComboBox cbUrinario;
    private javax.swing.JCheckBox chAF;
    private javax.swing.JCheckBox chAS;
    private javax.swing.JCheckBox chCP;
    private javax.swing.JCheckBox chCuraciones;
    private javax.swing.JCheckBox chES;
    private javax.swing.JCheckBox chExMamas;
    private javax.swing.JCheckBox chGM;
    private javax.swing.JCheckBox chIM;
    private javax.swing.JCheckBox chIV;
    private javax.swing.JCheckBox chPA;
    private javax.swing.JCheckBox chPAP;
    private javax.swing.JCheckBox chSC;
    private javax.swing.JCheckBox chSS;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel jlOidos;
    private javax.swing.JLabel jlOjos;
    private javax.swing.JLabel lblPacienteActual;
    private javax.swing.JPanel panelBtnBuscarPaciente;
    private javax.swing.JTabbedPane panelConsultaMedica;
    private javax.swing.JPanel panelImagenLabGab;
    private javax.swing.JTabbedPane panelPrincipal;
    private javax.swing.JMenuItem popItemCompletarActividad;
    private javax.swing.JMenuItem popItemEliminarActividad;
    private javax.swing.JMenuItem popItemNuevaActividad;
    private javax.swing.JPopupMenu popMenuAccionesActividad;
    private javax.swing.JTabbedPane tabAdministrador;
    private javax.swing.JPanel tabBuscarPaciente;
    private javax.swing.JPanel tabConsultaMedica;
    private javax.swing.JTabbedPane tabExpediente;
    private javax.swing.JTabbedPane tabInventario;
    private javax.swing.JTabbedPane tabReportes;
    private javax.swing.JTable tableBuscarPaciente;
    private javax.swing.JTabbedPane tapAgenda;
    private javax.swing.JTextField textBuscarPaciente;
    private javax.swing.JTextField textFC;
    private javax.swing.JTextField textGC;
    private javax.swing.JTextField textH2O;
    private javax.swing.JTextField textIMB;
    private javax.swing.JTextField textIMC;
    private javax.swing.JTextField textMM;
    private javax.swing.JTextField textMotivo2;
    private javax.swing.JTextField textMotivoConsulta;
    private javax.swing.JTextArea textNotaEnfermeria;
    private javax.swing.JTextField textObservaciones;
    private javax.swing.JTextField textOtrosDetallesAbdomen;
    private javax.swing.JTextField textOtrosDetallesBoca;
    private javax.swing.JTextField textOtrosDetallesCorazon;
    private javax.swing.JTextField textOtrosDetallesEsqueletico;
    private javax.swing.JTextField textOtrosDetallesNariz;
    private javax.swing.JTextField textOtrosDetallesOidos;
    private javax.swing.JTextField textOtrosDetallesTorax;
    private javax.swing.JTextField textOtrosDetallesUrinario;
    private javax.swing.JTextField textPAR;
    private javax.swing.JTextField textPeso;
    private javax.swing.JTextField textRutaLabGab;
    private javax.swing.JTextField textSintomas;
    private javax.swing.JTextField textTalla;
    private javax.swing.JTextField textTemperatura;
    // End of variables declaration//GEN-END:variables
}
