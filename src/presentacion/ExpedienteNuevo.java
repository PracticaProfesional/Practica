package presentacion;

import datos.ObtenerUltimoId;
import entidad.Alergia;
import entidad.AntecedenteFamiliar;
import entidad.AntecedentesPersPad;
import entidad.Paciente;
import entidad.Padecimiento;
import entidad.Telefono;
import entidad.Vacuna;
import entidad.AntecedentesPersonales;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import negocio.NegocioAntecedentesPersPad;
import negocio.NegocioAntecedenteFamiliar;
import negocio.NegocioAntecedentesFamPad;
import negocio.NegocioExpedientePadecimientos;
import negocio.NegocioExpedienteVacunas;
import entidad.AntecedentesFamPad;
import entidad.ExpedientePadecimientos;
import entidad.ExpedienteVacunas;
import entidad.enums.SexoEnum;
import entidad.enums.TipoEnum;
import java.awt.HeadlessException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import negocio.NegocioVacuna;

/**
 * Esta clase permite crear una ventana que contendrá el asistente para 
 * crear nuevos expedientes.
 * @author cooper15
 */
public class ExpedienteNuevo extends javax.swing.JDialog 
{

    ArrayList listaDeIds = new ArrayList();
    int idPadecimiento;
    int idsAntecedentesFamiliares [];
    DefaultTableModel modeloPadecimientos = new DefaultTableModel();   // modelo de la tabla de padecimientos
    DefaultTableModel modeloVacunas = new DefaultTableModel();         // modelo de la tabla de vacunas
    
    
    /**
     * El constructor de la clase.
     * @param parent ventana padre
     * @param modal establece la modalidad de la ventana
     */
    public ExpedienteNuevo(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        this.setResizable(false);
        //this.pack();
        this.setSize(1150, 650);
        this.setLocationRelativeTo(parent);
        this.btnExpedienteNuevoGuardar.setEnabled(false);
        
        modeloPadecimientos.addColumn("Padecimiento");   // columnas de la tabla de padecimientos
        modeloPadecimientos.addColumn("Tratamiento");
        modeloPadecimientos.addColumn("Medicamento");
        
        modeloVacunas.addColumn("Tipo");
        modeloVacunas.addColumn("Fecha de Aplicación");
        
        
    }// fin del constructor de ExpedienteNuevo

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        panelBtnExpedienteNUevo = new javax.swing.JPanel();
        tabExpedienteNuevo = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textApellido2 = new javax.swing.JTextField();
        textIdentificacion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textApellido1 = new javax.swing.JTextField();
        textNacionalidad = new javax.swing.JTextField();
        textFechaNac = new datechooser.beans.DateChooserCombo();
        jLabel7 = new javax.swing.JLabel();
        textTelefono = new javax.swing.JTextField();
        textNombre = new javax.swing.JTextField();
        textSexo = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        textTelefono1 = new javax.swing.JTextField();
        textFechaNac1 = new datechooser.beans.DateChooserCombo();
        lblAnios = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDireccionFamiliar = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textDireccionLectiva = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtTratamiento = new javax.swing.JTextField();
        Medicamentos = new javax.swing.JLabel();
        txtMedicamentos = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAgregarPadecimientoPer = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblPadecimientos = new javax.swing.JTable();
        btnAgregarPadecimiento = new javax.swing.JButton();
        btnEliminarPadecimiento = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtPadecimiento = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaAlergias = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtVacunaTipo = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblVacunas = new javax.swing.JTable();
        btnAgregarVacuna = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        btnEliminarVacuna = new javax.swing.JButton();
        txtVacunaFechaApli = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        btnAgregarPadecimientoPer1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPadecimientos2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        textAntFamDescrip1 = new javax.swing.JTextField();
        textAntFamParentesco1 = new javax.swing.JTextField();
        btnPasar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnExpedienteNuevoGuardar = new javax.swing.JButton();
        btnExpedienteNuevoCancelar = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Expediente");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout panelBtnExpedienteNUevoLayout = new javax.swing.GroupLayout(panelBtnExpedienteNUevo);
        panelBtnExpedienteNUevo.setLayout(panelBtnExpedienteNUevoLayout);
        panelBtnExpedienteNUevoLayout.setHorizontalGroup(
            panelBtnExpedienteNUevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelBtnExpedienteNUevoLayout.setVerticalGroup(
            panelBtnExpedienteNUevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jLabel5.setText("Email");

        jLabel1.setText("Nombre");

        jLabel6.setText("Fecha Nac");

        jLabel8.setText("Sexo");

        jLabel2.setText("P. Apellido");

        jLabel4.setText("Cédula");

        jLabel3.setText("S. Apellido");

        textFechaNac.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    textFechaNac.setCurrentNavigateIndex(0);
    textFechaNac.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
    textFechaNac.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
        public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
            textFechaNacOnSelectionChange(evt);
        }
    });

    jLabel7.setText("Nacionalidad");

    textSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Masculino", "Femenino" }));

    jLabel22.setText("Teléfono");

    jLabel20.setText("Tipo");

    cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Administrativo", "Estudiante", "Docente" }));

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel8Layout.createSequentialGroup()
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1)
                .addComponent(jLabel4)
                .addComponent(jLabel7)
                .addComponent(jLabel20))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textNacionalidad, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5)
                        .addComponent(jLabel8))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(textApellido1)
                        .addComponent(textEmail)
                        .addComponent(textSexo, 0, 177, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel6)
                        .addComponent(jLabel22))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(textApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)))
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))))
    );
    jPanel8Layout.setVerticalGroup(
        jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel20)
                .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(textNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1)
                .addComponent(jLabel2)
                .addComponent(textApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3)
                .addComponent(textApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addComponent(textFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(textTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)))
            .addGap(27, 27, 27))
    );

    jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentacion/icons/profile128.png"))); // NOI18N

    textFechaNac1.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
textFechaNac1.setCurrentNavigateIndex(0);
textFechaNac1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Direcciones"));

textDireccionFamiliar.setColumns(20);
textDireccionFamiliar.setRows(5);
jScrollPane1.setViewportView(textDireccionFamiliar);

jLabel10.setText("En tiempo lectivo");

textDireccionLectiva.setColumns(20);
textDireccionLectiva.setRows(5);
jScrollPane2.setViewportView(textDireccionLectiva);

jLabel9.setText("Familiar");

javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
jPanel9.setLayout(jPanel9Layout);
jPanel9Layout.setHorizontalGroup(
    jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanel9Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1107, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    jPanel9Layout.setVerticalGroup(
        jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel9Layout.createSequentialGroup()
            .addComponent(jLabel9)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel10)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(lblAnios, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jLabel12)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                    .addComponent(lblAnios, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34))
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(48, 48, 48))
    );

    tabExpedienteNuevo.addTab("Datos Personales", jPanel4);

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Padecimientos"));

    jLabel21.setText("Tratamiento");

    Medicamentos.setText("Medicamentos");

    jLabel11.setText("Padecimiento");

    btnAgregarPadecimientoPer.setText("Añadir");
    btnAgregarPadecimientoPer.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAgregarPadecimientoPerActionPerformed(evt);
        }
    });

    tblPadecimientos.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null}
        },
        new String [] {
            "Padecimiento", "Tratamiento", "Medicamento"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane4.setViewportView(tblPadecimientos);

    btnAgregarPadecimiento.setText("Agregar");
    btnAgregarPadecimiento.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAgregarPadecimientoActionPerformed(evt);
        }
    });

    btnEliminarPadecimiento.setText("Eliminar");
    btnEliminarPadecimiento.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnEliminarPadecimientoActionPerformed(evt);
        }
    });

    jButton3.setText("Actualizar");

    txtPadecimiento.setEditable(false);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(btnEliminarPadecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(btnAgregarPadecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel21)
                        .addComponent(Medicamentos)
                        .addComponent(jLabel11))
                    .addGap(32, 32, 32)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(btnAgregarPadecimientoPer, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtPadecimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                        .addComponent(txtTratamiento)
                        .addComponent(txtMedicamentos))))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel11)
                .addComponent(btnAgregarPadecimientoPer)
                .addComponent(txtPadecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel21))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtMedicamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(Medicamentos))
            .addGap(21, 21, 21)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnAgregarPadecimiento)
                .addComponent(btnEliminarPadecimiento)
                .addComponent(jButton3))
            .addGap(8, 8, 8)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Alergias"));

    txaAlergias.setColumns(20);
    txaAlergias.setRows(5);
    jScrollPane3.setViewportView(txaAlergias);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane3)
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
            .addContainerGap())
    );

    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Vacunas"));

    jLabel15.setText("Tipo");

    jLabel16.setText("Fecha Aplicación");

    tblVacunas.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null},
            {null, null},
            {null, null},
            {null, null}
        },
        new String [] {
            "Tipo", "Fecha de aplicación"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane5.setViewportView(tblVacunas);

    btnAgregarVacuna.setText("Agregar");
    btnAgregarVacuna.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAgregarVacunaActionPerformed(evt);
        }
    });

    jButton6.setText("Actualizar");

    btnEliminarVacuna.setText("Eliminar");
    btnEliminarVacuna.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnEliminarVacunaActionPerformed(evt);
        }
    });

    txtVacunaFechaApli.setDateFormatString("MM/dd/yy");

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel15)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminarVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAgregarVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(112, Short.MAX_VALUE))
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jLabel16)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtVacunaTipo, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                        .addComponent(txtVacunaFechaApli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(0, 0, Short.MAX_VALUE))))
    );
    jPanel6Layout.setVerticalGroup(
        jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel6Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jLabel15)
                    .addGap(21, 21, 21))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                    .addComponent(txtVacunaTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel16)
                .addComponent(txtVacunaFechaApli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnAgregarVacuna)
                .addComponent(btnEliminarVacuna)
                .addComponent(jButton6))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(34, Short.MAX_VALUE))
    );

    tabExpedienteNuevo.addTab("Antecedentes Personales", jPanel5);

    jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Padecimientos"));

    jLabel14.setText("Padecimientos");

    btnAgregarPadecimientoPer1.setText("Añadir");
    btnAgregarPadecimientoPer1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAgregarPadecimientoPer1ActionPerformed(evt);
        }
    });

    tblPadecimientos2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null}
        },
        new String [] {
            "Padecimiento", "Tratamiento", "Medicamento"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jScrollPane6.setViewportView(tblPadecimientos2);
    if (tblPadecimientos2.getColumnModel().getColumnCount() > 0) {
        tblPadecimientos2.getColumnModel().getColumn(2).setHeaderValue("Medicamento");
    }

    jButton7.setText("Agregar");

    jButton8.setText("Eliminar");

    jButton9.setText("Actualizar");

    jLabel23.setText("Descripción");

    jLabel24.setText("Parentesco");

    javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
    jPanel10.setLayout(jPanel10Layout);
    jPanel10Layout.setHorizontalGroup(
        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel10Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 996, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton9))
                .addGroup(jPanel10Layout.createSequentialGroup()
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel23)
                        .addComponent(jLabel24)
                        .addComponent(jLabel14))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(textAntFamParentesco1)
                        .addComponent(textAntFamDescrip1)
                        .addComponent(btnAgregarPadecimientoPer1, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))))
            .addContainerGap())
    );
    jPanel10Layout.setVerticalGroup(
        jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton9)
                .addComponent(jButton8)
                .addComponent(jButton7))
            .addGap(67, 67, 67)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel14)
                .addComponent(btnAgregarPadecimientoPer1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel23)
                .addComponent(textAntFamDescrip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel24)
                .addComponent(textAntFamParentesco1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(34, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(121, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(111, Short.MAX_VALUE))
    );

    tabExpedienteNuevo.addTab("Antecedentes Familiares", jPanel1);

    btnPasar.setText("Pasar");
    btnPasar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnPasarActionPerformed(evt);
        }
    });

    btnSiguiente.setText("Siguiente >");
    btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSiguienteActionPerformed(evt);
        }
    });

    btnExpedienteNuevoGuardar.setText("Guardar");
    btnExpedienteNuevoGuardar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnExpedienteNuevoGuardarActionPerformed(evt);
        }
    });

    btnExpedienteNuevoCancelar.setText("Cancelar");
    btnExpedienteNuevoCancelar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnExpedienteNuevoCancelarActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tabExpedienteNuevo)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(panelBtnExpedienteNUevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPasar)
                    .addGap(18, 18, 18)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnExpedienteNuevoGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(btnExpedienteNuevoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(19, 19, 19)))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(tabExpedienteNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelBtnExpedienteNUevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPasar)
                    .addComponent(btnSiguiente)
                    .addComponent(btnExpedienteNuevoGuardar)
                    .addComponent(btnExpedienteNuevoCancelar)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnExpedienteNuevoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpedienteNuevoCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExpedienteNuevoCancelarActionPerformed

    private void btnExpedienteNuevoGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpedienteNuevoGuardarActionPerformed
        //if(validaciones(tabExpedienteNuevo.getSelectedIndex()))
            guardarNuevoExpediente();
    }//GEN-LAST:event_btnExpedienteNuevoGuardarActionPerformed

    private void guardarNuevoExpediente() {
        // Primero que nada se deben validar los datos ingresados.
        entidad.Paciente nuevoPaciente = new entidad.Paciente();
        entidad.Vacuna nuevaVacuna = new entidad.Vacuna();
        entidad.Alergia nuevaAlergia = new entidad.Alergia();
        entidad.Padecimiento nuevoPadecimiento = new entidad.Padecimiento();
        entidad.Telefono nuevoTelefono = new entidad.Telefono();
        
        insertarTelefono(nuevoTelefono);
        datos.ObtenerUltimoId ultimoId = new datos.ObtenerUltimoId(); // Cambia el obtener id a la capa de datos.
        
        // Llamada a funcion para realizar los procedimientos de insercion de paciente.
        insertarPaciente(nuevoPaciente, ultimoId);
        crearExpedienteMedico();
        insertarAntecedentesPersonales(ultimoId);
        //insertarPadecimiento(nuevoPadecimiento);
        /*insertarAlergia(nuevaAlergia);
        insertarVacuna(nuevaVacuna);
        insertarAntecedentesPersonal(ultimoId);
        insertarAntecedentesPersonalesPadecimientos(ultimoId);
        insertarAntecedenteFamiliar();
        insertarAntecedenteFamiliaresPAdecimientos(ultimoId);
        crearExpedienteMedico();*/
        this.dispose();
    }

    private void btnAgregarPadecimientoPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPadecimientoPerActionPerformed
        
        CatalogoPadecimientos padecimientos = new CatalogoPadecimientos(this, true);
        padecimientos.setVisible(true);
        
        
        idPadecimiento = padecimientos.obtenerIdDePadecimiento();
                
        listaDeIds.add(idPadecimiento);
        
        /*for (int i = 0; i < idDePadecimientos.length; i++)
        {
            System.out.println("Id: " + idDePadecimientos[i]);
        }// fin del for*/
        
        txtPadecimiento.setText(padecimientos.arreglo[0]);
    }//GEN-LAST:event_btnAgregarPadecimientoPerActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        
        int indiceSeleccionado = tabExpedienteNuevo.getSelectedIndex();
        
            switch(indiceSeleccionado)
            {
                case 0: 
                    if (validaciones(indiceSeleccionado))
                        setPanel2(indiceSeleccionado);
                    
                    else
                        JOptionPane.showMessageDialog(null, "Uno o más campos son incorrectos",
                    "Atención", JOptionPane.ERROR_MESSAGE);
                    break;
                    
                case 1:
                    int confirmacion;
                    
                    if (validaciones(indiceSeleccionado))
                    {
                        setPanel3(indiceSeleccionado); 
                        btnExpedienteNuevoGuardar.setEnabled(true);
                        btnSiguiente.setEnabled(false);
                    }// fin del if
                    
                    else
                    {
                        confirmacion = JOptionPane.showConfirmDialog(this, 
                            "Continuar sin agregar ningún antecedente personal?");
                        
                        if (confirmacion == JOptionPane.YES_OPTION)
                        {
                            setPanel3(indiceSeleccionado); 
                            btnExpedienteNuevoGuardar.setEnabled(true);
                            btnSiguiente.setEnabled(false);
                        }
                    }// fin del else
                    break;
            }// fin del switch
        // fin del if
        
        /*else
        {
            JOptionPane.showMessageDialog(null, "Uno o más campos son incorrectos",
                    "Atención", JOptionPane.ERROR_MESSAGE);
        }// fin del else*/
        /*int selectedIndex = tabExpedienteNuevo.getSelectedIndex();
        switch(selectedIndex){
            case 0: 
                setPanel2(selectedIndex);
                break;
            case 1: 
                setPanel3(selectedIndex); 
                btnExpedienteNuevoGuardar.setEnabled(true);
                btnSiguiente.setEnabled(false);
                break;
        }*/
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void setPanel2(int selectedIndex) {
        tabExpedienteNuevo.setEnabledAt(0, false);
        tabExpedienteNuevo.setEnabledAt(1, true);
        //if(validaciones(selectedIndex))
        tabExpedienteNuevo.setSelectedIndex(selectedIndex + 1);
    }

    private void setPanel3(int selectedIndex) throws HeadlessException {
        tabExpedienteNuevo.setEnabledAt(1, false);
        tabExpedienteNuevo.setEnabledAt(2, true);
        //if(validaciones(selectedIndex))
            tabExpedienteNuevo.setSelectedIndex(selectedIndex + 1);
        /*else{
            int valor = JOptionPane.showConfirmDialog(null,
                    "Existen valores en blanco.¿Desea continuar?",
                    "Atención",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(valor == 0){
                tabExpedienteNuevo.setSelectedIndex(selectedIndex + 1);
                btnExpedienteNuevoGuardar.setEnabled(true);
                btnSiguiente.setEnabled(false);
            }
                
        }*/
    }

    private void textFechaNacOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_textFechaNacOnSelectionChange
        negocio.Edad calculaEdad = new negocio.Edad();
        int year = textFechaNac.getCurrent().get(Calendar.YEAR);
        int month = textFechaNac.getCurrent().get(Calendar.MONTH) + 1;
        int day = textFechaNac.getCurrent().get(Calendar.DAY_OF_MONTH);
        String edad = calculaEdad.getAge(year, month, day);
        lblAnios.setText("Edad: "+edad + " Años");
    }//GEN-LAST:event_textFechaNacOnSelectionChange

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        tabExpedienteNuevo.setEnabledAt(1, false);
        tabExpedienteNuevo.setEnabledAt(2, false);
    }//GEN-LAST:event_formWindowOpened

    private void btnAgregarPadecimientoPer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPadecimientoPer1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarPadecimientoPer1ActionPerformed

    private void btnPasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasarActionPerformed
        // TODO add your handling code here:
        tabExpedienteNuevo.setSelectedIndex(tabExpedienteNuevo.getSelectedIndex() + 1);
    }//GEN-LAST:event_btnPasarActionPerformed

    private void btnAgregarPadecimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPadecimientoActionPerformed
        // TODO add your handling code here:
        cargarFilaEnTablaPadecimientos();
    }//GEN-LAST:event_btnAgregarPadecimientoActionPerformed

    private void btnEliminarPadecimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPadecimientoActionPerformed
        // TODO add your handling code here:
        try
        {
            modeloPadecimientos.removeRow(tblPadecimientos.getSelectedRow());
            tblPadecimientos.setModel(modeloPadecimientos);
            
            if (tblPadecimientos.getRowCount() == 0)
                tblPadecimientos.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {null, null},
                            {null, null},
                            {null, null},
                            {null, null}
                        },
                        new String [] {
                            "Padecimiento", "Tratamiento", "Medicamento"
                        }
                ));
        }//fin del try
        catch(ArrayIndexOutOfBoundsException aioobe)
        {
            if (tblPadecimientos.getRowCount() != 4 || tblPadecimientos.getValueAt(0, 0) != null)
                JOptionPane.showMessageDialog(null, "Debe seleccionar el padecimiento que desea eliminar",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
            
            else
                JOptionPane.showMessageDialog(null, "No hay padecimientos para eliminar en la tabla",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
        }// fin del catch
    }//GEN-LAST:event_btnEliminarPadecimientoActionPerformed

    private void btnAgregarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarVacunaActionPerformed
        // TODO add your handling code here:
        cargarFilaEnTablaVacunas();
    }//GEN-LAST:event_btnAgregarVacunaActionPerformed

    private void btnEliminarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarVacunaActionPerformed
        // TODO add your handling code here:
        try
        {
            modeloVacunas.removeRow(tblVacunas.getSelectedRow());
            tblVacunas.setModel(modeloVacunas);
            
            if (tblVacunas.getRowCount() == 0)
                tblVacunas.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {null, null},
                            {null, null},
                            {null, null},
                            {null, null}
                        },
                        new String [] {
                            "Tipo", "Fecha de aplicación"
                        }
                ));
        }//fin del try
        catch(ArrayIndexOutOfBoundsException aioobe)
        {
            if (tblVacunas.getRowCount() != 4 || tblVacunas.getValueAt(0, 0) != null)
                JOptionPane.showMessageDialog(null, "Debe seleccionar el medicamento que desea eliminar",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
            
            else
                JOptionPane.showMessageDialog(null, "No hay vacunas para eliminar en la tabla",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
        }// fin del catch
    }//GEN-LAST:event_btnEliminarVacunaActionPerformed

    private void crearExpedienteMedico() 
    {
        negocio.NegocioExpedienteMedico insertarExpediente = new negocio.NegocioExpedienteMedico();
        
        try 
        {
            insertarExpediente.insertarExpedientMedico(txaAlergias.getText());  // se inserta un expediente con alergia incluida
        }// fin del try
        
        catch (SQLException ex) 
        {
            Logger.getLogger(ExpedienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }// fin del catch
    }// fin del metodo crearExpedienteMedico

    private void insertarAntecedenteFamiliar() 
    {
        NegocioAntecedenteFamiliar objetoNegocioAntFam = new NegocioAntecedenteFamiliar();
        AntecedenteFamiliar nuevoAntFam = new AntecedenteFamiliar();
        
        /*if (! textAntFamParentesco.getText().equals(""))  // valida si el campo de texto de parentesco esta vacio
            nuevoAntFam.setParentezco(textAntFamParentesco.getText());
        
        if (! textAntFamDescrip.getText().equals("")) // valida si el campo de de texto de medicamento esta vacio
            nuevoAntFam.setDescripcion(textAntFamDescrip.getText());*/
        
        try
        {
            objetoNegocioAntFam.insertarAntecedenteFamiliar(nuevoAntFam);
        }// fin del try
        catch(SQLException ex)
        {
            System.out.println("Exepcion");
        }// fin del catch
        
    }// fin del metodo insertarAntecedenteFamiliar

    private void insertarAntecedentesPersonales(ObtenerUltimoId ultimoId) 
    { 
        System.out.println(tblPadecimientos.getRowCount());
        
        // Obtenemos el ultimo id del ultimo expediente medico ingresado en la base de datos
        String idExpedienteMedico = ultimoId.obtenerUltimoId("ExpedienteMedico");
                
        if (tblPadecimientos.getValueAt(0, 0) != null)
            insertarPadecimientos(idExpedienteMedico);
        
        if (tblVacunas.getValueAt(0, 0) != null)
            insertarVacunas(idExpedienteMedico);
        /*AntecedentesPersonales nuevoAntPer = new AntecedentesPersonales();
        
        if (! txtTratamiento.getText().equals(""))  // valida si el campo de texto de tratamiento esta vacio
            nuevoAntPer.setTratamiento(txtTratamiento.getText());
        
        if (! txtMedicamentos.getText().equals(""))  // valida si el campo de de texto de medicamento esta vacio
            nuevoAntPer.setMedicamento(txtMedicamentos.getText());
        
       /* if (! textAlergiaNombre.getText().equals("") || ! textAlergiaDescrip.getText().equals("")) 
        {
            // la base de datos de pedro tiene el nombre de estas tablas en minuscula
            nuevoAntPer.setAlergias(Integer.parseInt(ultimoId.obtenerUltimoId("Alergias")));
            
        }*/
        /*if (! txtVacunaTipo.getText().equals("")) 
            nuevoAntPer.setVacunas(Integer.parseInt(ultimoId.obtenerUltimoId("Vacunas")));
        try
        {
            ultimoId.getEstado().close();
        } 
        catch (SQLException ex) 
        {
            System.out.println(ex.getErrorCode());
            //Logger.getLogger(ExpedienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        negocio.NegocioAntecedentePersonal insertarAntPer = new negocio.NegocioAntecedentePersonal();
        insertarAntPer.insertarAntecedentePersonal(nuevoAntPer);*/
    }// fin del metodo insertarAntecedentesPersonal
    
    private void insertarPadecimientos(String idExpedienteMedico)
    {
        NegocioExpedientePadecimientos objExpPad = new NegocioExpedientePadecimientos();
        int tamanoFilas = tblPadecimientos.getRowCount();   // tamano filas para definir el arreglo
        ExpedientePadecimientos objExpedientePadecimientos [] = new ExpedientePadecimientos [tamanoFilas];
        
        for (int i = 0; i < objExpedientePadecimientos.length; i++)
        {
            objExpedientePadecimientos[i] = new ExpedientePadecimientos();
            
            // se ingresa el padecimiento seleccionado del catalogo de padecimientos (CatalogoPadecimientos.java)
            objExpedientePadecimientos[i].setIdPadecimiento((Integer)listaDeIds.get(i));
            
            objExpedientePadecimientos[i].setIdExpediente(Integer.parseInt(idExpedienteMedico));   // se ingresan los    
            objExpedientePadecimientos[i].setTratamiento(tblPadecimientos.getValueAt(i, 1).toString());  // restantes
            objExpedientePadecimientos[i].setMedicamento(tblPadecimientos.getValueAt(i, 2).toString()); // atributos
            
            // insertamos en la base de datos
            objExpPad.insertarExpedientePadecimientos(objExpedientePadecimientos[i]);
        } // fin del for
        
    }// fin del metodo insertarPadecimientos
    
    private void insertarVacunas(String idExpedienteMedico)
    {
        NegocioVacuna objNegocioVacuna = new NegocioVacuna();
        NegocioExpedienteVacunas objNegocioExpVac = new NegocioExpedienteVacunas();
        
        int tamanoFilas = tblVacunas.getRowCount();   // tamano filas para definir el arreglo
        String nombreVacunas [] = new String [tamanoFilas]; // se crea el arreglo de string para las vacunas
        String idVacunas [] = new String [tamanoFilas];
        
        ExpedienteVacunas objExpedienteVacunas [] = new ExpedienteVacunas [tamanoFilas];
        
        for (int i = 0; i < nombreVacunas.length; i++)
        {
            nombreVacunas[i] = tblVacunas.getValueAt(i, 0).toString();
            objNegocioVacuna.consultarInsertarVacuna(nombreVacunas[i]);
        }// fin del for
        
        for (int i = 0; i < idVacunas.length; i++)
        {
            idVacunas[i] = objNegocioVacuna.obtenerIdVacuna(nombreVacunas[i]);
        }// fin del for
        
        for (int i = 0; i < nombreVacunas.length; i++) 
        {
            objExpedienteVacunas[i] = new ExpedienteVacunas();
            
            objExpedienteVacunas[i].setIdVacuna(Integer.parseInt(idVacunas[i]));
            objExpedienteVacunas[i].setIdExpediente(Integer.parseInt(idExpedienteMedico));
            
            if (! tblVacunas.getValueAt(i, 1).toString().equals(""))
                objExpedienteVacunas[i].setFecha(tblVacunas.getValueAt(i, 1).toString());
            
            else
                objExpedienteVacunas[i].setFecha("0000-00-00");
            // insertamos en la base de datos
            objNegocioExpVac.insertarExpedienteVacunas(objExpedienteVacunas[i]);
        } // fin del for
        
    }// fin del metodo insertarVacunas
    
    private void insertarTelefono(Telefono nuevoTelefono) {
        negocio.NegocioTelefono insertarTelefono = new negocio.NegocioTelefono();
        nuevoTelefono.setTelefono(textTelefono.getText());
        nuevoTelefono.setDetalle("Nada..");
        insertarTelefono.insertarTelefono(nuevoTelefono);
    }

    private void insertarVacuna(Vacuna nuevaVacuna) {
        if(!getFechaNac().equals("") & !txtVacunaTipo.getText().equals("")){
            nuevaVacuna.setFechaAplicacion(getFechaVacuna());
            nuevaVacuna.setTipo(txtVacunaTipo.getText());
        }  
        if (! nuevaVacuna.getTipo().equals(""))
        {
            negocio.NegocioVacuna insertarVacuna = new negocio.NegocioVacuna();
            insertarVacuna.insertarVacuna(nuevaVacuna);
        }// fin del if        
    }// fin del metodo insertarVacuna

    private void insertarAlergia(Alergia nuevaAlergia){
        /*if(!textAlergiaNombre.getText().equals("") & !textAlergiaDescrip.getText().equals("")){
            nuevaAlergia.setNombreAlergia(textAlergiaNombre.getText());
            nuevaAlergia.setDetalleAlergia(textAlergiaDescrip.getText());
        } */
        if (! nuevaAlergia.getNombreAlergia().equals("") && ! nuevaAlergia.getDetalleAlergia().equals(""))
        {
            negocio.NegocioAlergia insertarAlergia = new negocio.NegocioAlergia();
            insertarAlergia.insertarAlergia(nuevaAlergia);
        }// fin del if
    }// fin del metodo insertarAlergia
    
    private void insertarAntecedentesPersonalesPadecimientos(ObtenerUltimoId ultimoId)
    {
        /*NegocioAntecedentesPersPad negocioAntecedentes = new NegocioAntecedentesPersPad();
        AntecedentesPersPad nuevoAntecedente = new AntecedentesPersPad();
        if(idsAntecedentesPersonales != null){
            try
            {
                for (int i = 0; i < idsAntecedentesPersonales.length; i++)
                {
                    nuevoAntecedente.setIdPadecimientos(idsAntecedentesPersonales[i]);
                    nuevoAntecedente.setIdAntecedentesPersonales(
                    Integer.parseInt(ultimoId.obtenerUltimoId("AntecedentesPersonales")));

                    negocioAntecedentes.insertarAntecedentePersPad(nuevoAntecedente);
                }// fin del for
            }// fin del try
            catch (NullPointerException npe)
            {
                System.err.println(npe.getMessage());
                JOptionPane.showMessageDialog(null, "No se asociaron padecimientos a el paciente");
            }// fin del catch
        }*/
        
    }// fin del metodo insertarAntecedentesPersonalesPadecimientos
    
    /**
     * Inserta los padecimientos en la tabla de la base de datos respectiva
     * @param ultimoId toma como parametro el id del ultimo registro insertado
     * en la BD
     */
    public void insertarAntecedenteFamiliaresPAdecimientos(ObtenerUltimoId ultimoId)
    {
        NegocioAntecedentesFamPad negocioAntecedentes = new NegocioAntecedentesFamPad();
        AntecedentesFamPad nuevoAntecedente = new AntecedentesFamPad();
        
        try
        {
            for (int i = 0; i < idsAntecedentesFamiliares.length; i++)
            {
                nuevoAntecedente.setIdPadecimiento(idsAntecedentesFamiliares[i]);
                nuevoAntecedente.setIdAntecedenteFamiliar(
                        Integer.parseInt(ultimoId.obtenerUltimoId("AntecedentesFamiliares")));
            
                negocioAntecedentes.insertarAntecedenteFamiliarPadecimiento(nuevoAntecedente);
            }// fin del for
        }// fin del try
        catch(NullPointerException npe)
        {
            JOptionPane.showMessageDialog(null, "No se asociaron padecimientos a los antecedentes familiares del paciente");
        }// fin del catach
    }// fin del metodo insertarAntecedenteFamiliaresPAdecimientos
    
    private void insertarPadecimiento(Padecimiento nuevoPadecimiento) {
//        nuevoPadecimiento.setNombrePadecimiento(textPadecimientoNombre.getText());
//        nuevoPadecimiento.setDescripcion(textPadecimientoDesc.getText());
//        negocio.NegocioPadecimiento insertarPadecimiento = new negocio.NegocioPadecimiento();
//        insertarPadecimiento.insertarPadecimiento(nuevoPadecimiento);
    }

    private void insertarPaciente(Paciente nuevoPaciente, ObtenerUltimoId ultimoId) 
    {
        nuevoPaciente.setNombrePaciente(textNombre.getText());
        nuevoPaciente.setApellido1(textApellido1.getText());
        nuevoPaciente.setApellido2(textApellido2.getText());
        switch(textSexo.getSelectedIndex()){
            case 1: nuevoPaciente.setSexo(SexoEnum.MASCULINO);
                break;
            case 2: nuevoPaciente.setSexo(SexoEnum.FEMENINO);
                break;
        }
        nuevoPaciente.setTelefono(ultimoId.obtenerUltimoId("telefono"));
        try 
        {
            ultimoId.getEstado().close();
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ExpedienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        nuevoPaciente.setIdentificacion(textIdentificacion.getText());
        nuevoPaciente.setFechaNacimiento(getFechaNac());
        nuevoPaciente.setNacionalidad(textNacionalidad.getText());
        nuevoPaciente.setEmail(textEmail.getText());
        nuevoPaciente.setDireccion1(textDireccionFamiliar.getText());
        nuevoPaciente.setDireccion2(textDireccionLectiva.getText());
        
        switch(cbTipo.getSelectedIndex()) {
            case 1: nuevoPaciente.setTipo(TipoEnum.ADMINISTRATIVO);
                break;    
            case 2: nuevoPaciente.setTipo(TipoEnum.ESTUDIANTE);
                break;
            case 3: nuevoPaciente.setTipo(TipoEnum.DOCENTE);
                break;
        }// fin del switch
        
         negocio.NegocioPaciente insertarPaciente = new negocio.NegocioPaciente();
        insertarPaciente.insetarPaciente(nuevoPaciente);
    }
    // PROBAR PASAR EL NOMBRE DEL CAMPO DE TEXTO COMO PARAMETRO.
    private String getFechaNac(){
        String fechaNac = "";
        final int year = textFechaNac.getCurrent().get(Calendar.YEAR);
        final int day = textFechaNac.getCurrent().get(Calendar.DAY_OF_MONTH);
        final int month = textFechaNac.getCurrent().get(Calendar.MONTH) + 1;
        fechaNac = year+"-"+month+"-"+day;
        return fechaNac;
    }
    private String getFechaVacuna(){
        String fechaVacuna = "";
        
        try
        {
            final int year = txtVacunaFechaApli.getCalendar().get(Calendar.YEAR);
            final int day = txtVacunaFechaApli.getCalendar().get(Calendar.DAY_OF_MONTH);
            final int month = txtVacunaFechaApli.getCalendar().get(Calendar.MONTH) + 1;
            fechaVacuna = year+"-"+month+"-"+day;
        }// fin del try
        catch(NullPointerException npe)
        {
            npe.getMessage();
        }// fin del catch
        finally
        {
            return fechaVacuna;
        }// fin del finally
        
    }
    private boolean validaciones(int seleccion)
    {
        switch(seleccion)
        {
            case 0:
                return validaDatosPersonales();
                
            case 1:
                return validaAntecedentesPersonales();
                
            case 2:
                return validaAntecedentesFamiliares();
                
            default:
                return true;
        }// fin de switch
    }// fin del metodo validaciones

    private boolean validaDatosPersonales() {
        boolean validado = false;
        JTextField [] camposTexto = {textNombre, textApellido1, textApellido2,
            textIdentificacion, textEmail,textTelefono,
            textNacionalidad};
        for(JTextField campo:camposTexto)
            if(campo.getText().equals("")
                    || textDireccionFamiliar.getText().equals("")
                    /*|| textDireccionLectiva.getText().equals("")*/
                    || textSexo.getSelectedItem().toString().equals("Seleccione"))
                return false;
            else{
                // no estan vacios los campos, procede a validar email y telefono.
                String regEmail = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                        + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)"
                        + "*(\\.[A-Za-z]{2,})$";
                String regTelefono = ".*[1-9].*";
                String regCedula = ".*[1-9].*";
                if (!regExValidation(regEmail, textEmail)
                        || !regExValidation(regTelefono, textTelefono)
                        || !regExValidation(regCedula, textIdentificacion))
                    return validado;
                else{
                    validado = true;
                    return validado;
                }
            }
        
        return validado;
    }
    private boolean validaAntecedentesPersonales()
    {
        int confirmacion;
        
        if (tblPadecimientos.getValueAt(0, 0) != null || tblVacunas.getValueAt(0, 0) != null
                || !(txaAlergias.getText().equals("")))
            return true;
        
        else
        {
            return false;
        }// fin del else
        
        /*int confirmacion;
        //String alergiaNombre = textAlergiaNombre.getText();
        //String alergiaDescrip = textAlergiaDescrip.getText();
        String tratamiento = textTratamiento.getText();
        String vacuna = textVacunaTipo.getText();
        String medicamento = textMedicamentos.getText();
            if(alergiaNombre.equals("") || alergiaDescrip.equals("")
               || tratamiento.equals("") || vacuna.equals("") || medicamento.equals("")){
                confirmacion = JOptionPane.showConfirmDialog(this, "Esta seguro en dejar los campos en blanco.");
                if(confirmacion == 0)
                    return true;
            }
            else 
                return true;*/
        
            
        
    }// fin del metodo validaAntecedentesPersonales
    
    private boolean validaAntecedentesFamiliares(){
        //String descrip = textAntFamDescrip.getText();
        //String parentesco = textAntFamParentesco.getText();
        return false;  //(!descrip.equals("") && !parentesco.equals(""));
    }

    private boolean regExValidation(String validador, JTextField campo) {
        java.util.regex.Pattern patronComparar;
        java.util.regex.Matcher comparador;
        patronComparar = java.util.regex.Pattern.compile(validador);
        comparador = patronComparar.matcher(campo.getText());
        return comparador.matches();  
    }
    
    // El siguiente metodo carga una fila en la tabla de padecimientos
    private void cargarFilaEnTablaPadecimientos()
    {
        String fila [] = new String [3];  // cada objeto fila es una fila de la tabla
        
        fila [0] = txtPadecimiento.getText();    // ingresa cada campo de el formulario en el arreglo
        fila [1] = txtTratamiento.getText();     // para posteriormente ingresar el arreglo como una fila
        fila [2] = txtMedicamentos.getText();
        
        modeloPadecimientos.addRow(fila);
        tblPadecimientos.setModel(modeloPadecimientos);
        
        // Se limpian los campos despues de cada ingreso
        txtPadecimiento.setText(null);
        txtTratamiento.setText(null);
        txtMedicamentos.setText(null);
    }// fin del metodo cargarFilaEnTabla
    
    // El siguiente metodo carga una fila en la tabla de vacunas
    private void cargarFilaEnTablaVacunas()
    {
        String fila [] = new String [2];  // cada objeto fila es una fila de la tabla
        
        fila [0] = txtVacunaTipo.getText();    // ingresa cada campo de el formulario en el arreglo
        fila [1] = getFechaVacuna();  // para posteriormente ingresar el arreglo como una fila
        //System.out.println(getFechaVacuna());
        
        modeloVacunas.addRow(fila);
        tblVacunas.setModel(modeloVacunas);
        
        // Se limpian los campos despues de cada ingreso
        txtVacunaTipo.setText(null);
        txtVacunaFechaApli.setDate(null);
    }// fin del metodo cargarFilaEnTablaVacunas
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpedienteNuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpedienteNuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpedienteNuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpedienteNuevo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExpedienteNuevo dialog = new ExpedienteNuevo(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Medicamentos;
    private javax.swing.JButton btnAgregarPadecimiento;
    private javax.swing.JButton btnAgregarPadecimientoPer;
    private javax.swing.JButton btnAgregarPadecimientoPer1;
    private javax.swing.JButton btnAgregarVacuna;
    private javax.swing.JButton btnEliminarPadecimiento;
    private javax.swing.JButton btnEliminarVacuna;
    private javax.swing.JButton btnExpedienteNuevoCancelar;
    private javax.swing.JButton btnExpedienteNuevoGuardar;
    private javax.swing.JButton btnPasar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblAnios;
    private javax.swing.JPanel panelBtnExpedienteNUevo;
    private javax.swing.JTabbedPane tabExpedienteNuevo;
    private javax.swing.JTable tblPadecimientos;
    private javax.swing.JTable tblPadecimientos2;
    private javax.swing.JTable tblVacunas;
    private javax.swing.JTextField textAntFamDescrip1;
    private javax.swing.JTextField textAntFamParentesco1;
    private javax.swing.JTextField textApellido1;
    private javax.swing.JTextField textApellido2;
    private javax.swing.JTextArea textDireccionFamiliar;
    private javax.swing.JTextArea textDireccionLectiva;
    private javax.swing.JTextField textEmail;
    private datechooser.beans.DateChooserCombo textFechaNac;
    private datechooser.beans.DateChooserCombo textFechaNac1;
    private javax.swing.JTextField textIdentificacion;
    private javax.swing.JTextField textNacionalidad;
    private javax.swing.JTextField textNombre;
    private javax.swing.JComboBox textSexo;
    private javax.swing.JTextField textTelefono;
    private javax.swing.JTextField textTelefono1;
    private javax.swing.JTextArea txaAlergias;
    private javax.swing.JTextField txtMedicamentos;
    private javax.swing.JTextField txtPadecimiento;
    private javax.swing.JTextField txtTratamiento;
    private com.toedter.calendar.JDateChooser txtVacunaFechaApli;
    private javax.swing.JTextField txtVacunaTipo;
    // End of variables declaration//GEN-END:variables
}
