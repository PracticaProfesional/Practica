
package presentacion;

import presentacion.reportes.CrearReporte;
import negocio.NegocioConsultaMedica;
import negocio.NegocioExpedienteMedico;
import negocio.NegocioExamenFisico;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author QUINCHO
 */
public class ContenedorConsultas extends javax.swing.JPanel 
{
    DefaultTableModel modeloConsultas;
    String idExpedienteMedico;
    
    
    public ContenedorConsultas(String idPaciente)
    {
        initComponents();
        idExpedienteMedico = obtenerIdExpediente(idPaciente);
        
        inicializarTablaConsultas();  // llamada al metodo que carga la tabla con las fechas de la consulta
        clicarFilaEnTabla();
    }// fin del constructor ContenedorConsultar
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlListaDeConsultas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsultas = new javax.swing.JTable();
        btnSignosVitales = new javax.swing.JButton();
        btnExamenFisico = new javax.swing.JButton();
        btnEliminarConsultaMedica = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaMotivoConsulta = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaSintomas = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txaDiagnostico = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txaTratamiento = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txaNotaEnfermeria = new javax.swing.JTextArea();

        pnlListaDeConsultas.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de consultas"));
        pnlListaDeConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlListaDeConsultasMouseClicked(evt);
            }
        });

        tblConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Fecha", "Id"
            }
        ));
        jScrollPane1.setViewportView(tblConsultas);

        btnSignosVitales.setText("Signos Vitales");
        btnSignosVitales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignosVitalesActionPerformed(evt);
            }
        });

        btnExamenFisico.setText("Examen Físico");
        btnExamenFisico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExamenFisicoActionPerformed(evt);
            }
        });

        btnEliminarConsultaMedica.setText("Eliminar");
        btnEliminarConsultaMedica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarConsultaMedicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListaDeConsultasLayout = new javax.swing.GroupLayout(pnlListaDeConsultas);
        pnlListaDeConsultas.setLayout(pnlListaDeConsultasLayout);
        pnlListaDeConsultasLayout.setHorizontalGroup(
            pnlListaDeConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaDeConsultasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlListaDeConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSignosVitales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExamenFisico, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(btnEliminarConsultaMedica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlListaDeConsultasLayout.setVerticalGroup(
            pnlListaDeConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaDeConsultasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlListaDeConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlListaDeConsultasLayout.createSequentialGroup()
                        .addComponent(btnSignosVitales)
                        .addGap(18, 18, 18)
                        .addComponent(btnExamenFisico)
                        .addGap(62, 62, 62)
                        .addComponent(btnEliminarConsultaMedica)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumen de la consulta seleccionada"));

        jLabel1.setText("Motivo de la consulta");

        txaMotivoConsulta.setEditable(false);
        txaMotivoConsulta.setColumns(20);
        txaMotivoConsulta.setRows(5);
        jScrollPane2.setViewportView(txaMotivoConsulta);

        jLabel2.setText("Síntomas");

        txaSintomas.setEditable(false);
        txaSintomas.setColumns(20);
        txaSintomas.setRows(5);
        jScrollPane3.setViewportView(txaSintomas);

        jLabel3.setText("Diagnóstico");

        txaDiagnostico.setEditable(false);
        txaDiagnostico.setColumns(20);
        txaDiagnostico.setRows(5);
        jScrollPane4.setViewportView(txaDiagnostico);

        jLabel4.setText("Tratamiento");

        txaTratamiento.setEditable(false);
        txaTratamiento.setColumns(20);
        txaTratamiento.setRows(5);
        jScrollPane5.setViewportView(txaTratamiento);

        jLabel5.setText("Nota de enfermería");

        txaNotaEnfermeria.setEditable(false);
        txaNotaEnfermeria.setColumns(20);
        txaNotaEnfermeria.setRows(5);
        jScrollPane6.setViewportView(txaNotaEnfermeria);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane5)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane6)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlListaDeConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlListaDeConsultas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSignosVitalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignosVitalesActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tblConsultas.getSelectedRow();
        
        if (filaSeleccionada != -1)
        {
            CrearReporte rsve = new CrearReporte();
            final String ruta = "src/presentacion/reportes/ReporteSignosVitalesExpediente.jasper";
            java.util.Map<String, Object> dicc = new java.util.HashMap<>();
            dicc.put("id", tblConsultas.getValueAt(filaSeleccionada, 1).toString());
            rsve.generarReporte(dicc, ruta);
        }// fin del if
        
        else
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de consulta", 
                        "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnSignosVitalesActionPerformed

    private void btnExamenFisicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExamenFisicoActionPerformed
        // TODO add your handling code here:
        
        try
        {
            obtenerDatosExamenFisico();
        }// fin del try
        catch (ArrayIndexOutOfBoundsException aioobe)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de consulta",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }// fin del catch
    }//GEN-LAST:event_btnExamenFisicoActionPerformed

    private void pnlListaDeConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlListaDeConsultasMouseClicked
        // TODO add your handling code here:
        
        //tblConsultas.clearSelection();
    }//GEN-LAST:event_pnlListaDeConsultasMouseClicked

    private void btnEliminarConsultaMedicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarConsultaMedicaActionPerformed
        // TODO add your handling code here:
        
        eliminarConsultaMedica();
        inicializarTablaConsultas();
    }//GEN-LAST:event_btnEliminarConsultaMedicaActionPerformed
    
    
    // El siguiente metodo carga la fecha de las consultas de un paciente en la tabla tblConsultas
    private void inicializarTablaConsultas ()
    {
        modeloConsultas = new DefaultTableModel()   //  modelo instanciado
                {
                    @Override // ihabilitamos la tabla para no permitir la edicion de sus columnas
                    public boolean isCellEditable(int rowIndex, int columnIndex)
                    {
                        return false;
                    }// fin del metodo isCellEditable
                };   // modelo de la tabla de consultas
        
        modeloConsultas.addColumn("Fecha");  // agregamos las cabeceras de columnas
        modeloConsultas.addColumn("Id");    // al modelo
        
        NegocioConsultaMedica objNegocioConMed = new NegocioConsultaMedica();
        String fila [] = new String [2];
        ResultSet rs;
        
        try
        {
            rs = objNegocioConMed.listarConsultasPorPaciente(idExpedienteMedico);
            
            while (rs.next())
            {
                fila[0] = rs.getString("fecha");
                fila[1] = rs.getString("id");
                
                modeloConsultas.addRow(fila);  // agregamos una fila al modelo por el arreglo
            }// fin del while
            
            tblConsultas.setModel(modeloConsultas);
            
            // Escondemos la columna de Id
            tblConsultas.getColumnModel().getColumn(1).setMaxWidth(0);
            tblConsultas.getColumnModel().getColumn(1).setMinWidth(0);
            tblConsultas.getColumnModel().getColumn(1).setPreferredWidth(0);
        }// fin del try
        catch (SQLException sqle)
        {
            System.out.println(sqle.getErrorCode() + sqle.getMessage());
        }// fin del catch
        
    }// fin del metodo inicializarTablaConsultas
    
    // El siguiente metodo obtiene los datos de la consulta medica segun su fecha
    private void obtenerDatosConsulta()
    {
        NegocioConsultaMedica objNegocioConMed = new NegocioConsultaMedica();
        ResultSet rs;
        int filaSeleccionada = tblConsultas.getSelectedRow();
       
        try
        {
            rs = objNegocioConMed.obtenerDatosConsulta(tblConsultas.getValueAt(filaSeleccionada, 
                    1).toString());
            
            if (rs.next())
            {
                txaMotivoConsulta.setText(rs.getString(1));
                txaSintomas.setText(rs.getString(2));
                txaDiagnostico.setText(rs.getString(3));
                txaTratamiento.setText(rs.getString(4));
                txaNotaEnfermeria.setText(rs.getString(5));
            }// fin del if
            
            else
                JOptionPane.showMessageDialog(null, "La consulta no se encuentra registrada", 
                        "Información", JOptionPane.INFORMATION_MESSAGE);
        }// fin del try
        catch (SQLException sqle)
        {
            System.out.println(sqle.getErrorCode() + sqle.getMessage());
        }// fin del catch
       
    }// fin del metodo obtenerDatosConsulta
    
    
    // El siguiente metodo obtiene los datos de examen fisico relacionados con la consulta
    // seleccionada
    private void obtenerDatosExamenFisico() throws ArrayIndexOutOfBoundsException
    {
        NegocioExamenFisico objNegocioExaFis = new NegocioExamenFisico();
        ResultSet rs;
        int filaSelccionada = tblConsultas.getSelectedRow();
        
        String cadena = "\tExamen Físico\n\n---------------------------------\n\n";
        int contador = 1;
        JTextArea output = new JTextArea(15, 30);
        JScrollPane scroll = new JScrollPane(output);
        
        try
        {
            rs = objNegocioExaFis.listarExamenFisicoPorConsulta(
                    tblConsultas.getValueAt(filaSelccionada, 1).toString());
            
            if (rs.next())
            {
                rs.beforeFirst();
                
                while(rs.next())
                {
                    cadena += "#" + contador + ".\n" +
                              "Categoría: " + rs.getString(1) + "\n" +
                              "Subcategoría: " + rs.getString(2) + "\n" +
                              "Detalle: " + rs.getString(2) + "\n" +
                              "\n";
                    
                    contador++;
                }// fin del while
                
                output.setText(cadena);
                JOptionPane.showMessageDialog(null, scroll, 
                        tblConsultas.getValueAt(filaSelccionada, 0).toString(), JOptionPane.INFORMATION_MESSAGE);
            }// fin del if
            else
            {
                JOptionPane.showMessageDialog(null, "No se registró ningún examen físico en esa consulta", 
                        "Información", JOptionPane.INFORMATION_MESSAGE);
            }// fin del else
        }// fin del try
        catch (SQLException sqle)
        {
            System.out.println(sqle.getErrorCode() + sqle.getMessage());
        }// fin del catch
    }// fin del metodo obtenerDatosExamenFisico
    
    // El siguiente metodo elimina el registro de consulta medica de la base de datos,
    // seleccionado por el usuario
    private void eliminarConsultaMedica()
    {
        NegocioConsultaMedica objConMed = new NegocioConsultaMedica();
        
        int filaSeleccionada = tblConsultas.getSelectedRow();
        
        if (filaSeleccionada != -1)
        {
            int confirmacion = JOptionPane.showConfirmDialog(null, 
                    "Está de seguro de elimianar la consulta del día\n" + 
                    tblConsultas.getValueAt(filaSeleccionada, 0) + " de la base de datos?");
            
            if (confirmacion == JOptionPane.YES_OPTION)
            {                
                String idConsultaMedica = tblConsultas.getValueAt(filaSeleccionada, 1).toString();
                objConMed.eliminarConsultaMedica(idConsultaMedica);
            }// fin del if           
        }// fin del if
        
        else
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de consulta", 
                        "Error", JOptionPane.ERROR_MESSAGE);
    }// fin del metodo eliminarConsultaMedica
    
    // El siguiente metodo establece el evento de clicar sobre una fila de la tabla
    private void clicarFilaEnTabla()
    {
        tblConsultas.addMouseListener(new java.awt.event.MouseAdapter()
            {
                @Override
                public void mouseClicked(MouseEvent e) 
                {
                    obtenerDatosConsulta();
                }
            }// fin de la clase interna anonima
        );
    }// fin del metodo clicarFilaEnTabla
    
    
    // El siguiente metodo obtiene el id del expediente medico a partir de id del paciente
    private String obtenerIdExpediente(String idPaciente)
    {
        NegocioExpedienteMedico objNegocioExpMed = new NegocioExpedienteMedico();        
        return objNegocioExpMed.obtenerIdExpedienteMedico(idPaciente);
    }// fin del metodo obtenerIdExpediente
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarConsultaMedica;
    private javax.swing.JButton btnExamenFisico;
    private javax.swing.JButton btnSignosVitales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel pnlListaDeConsultas;
    private javax.swing.JTable tblConsultas;
    private javax.swing.JTextArea txaDiagnostico;
    private javax.swing.JTextArea txaMotivoConsulta;
    private javax.swing.JTextArea txaNotaEnfermeria;
    private javax.swing.JTextArea txaSintomas;
    private javax.swing.JTextArea txaTratamiento;
    // End of variables declaration//GEN-END:variables
}
